{"version":3,"sources":["../node_modules/@material-ui/core/esm/SvgIcon/index.js","../node_modules/@babel/runtime/helpers/interopRequireDefault.js","../node_modules/@material-ui/icons/utils/createSvgIcon.js","../node_modules/@babel/runtime/helpers/extends.js","../node_modules/@material-ui/icons/Close.js","../node_modules/@material-ui/core/esm/DialogContent/DialogContent.js","../node_modules/@material-ui/core/esm/DialogActions/DialogActions.js","../node_modules/@material-ui/core/esm/ListItemText/ListItemText.js","../node_modules/@material-ui/core/esm/Divider/Divider.js","../node_modules/@material-ui/icons/Person.js","../node_modules/@material-ui/icons/Add.js","../node_modules/@material-ui/core/esm/internal/svg-icons/Person.js","../node_modules/@material-ui/core/esm/Avatar/Avatar.js","../node_modules/@material-ui/core/esm/ListItemAvatar/ListItemAvatar.js","../node_modules/@material-ui/core/esm/DialogTitle/DialogTitle.js","app/views/material-kit/dialog/SimpleDialog.jsx","../node_modules/@material-ui/core/esm/DialogContentText/DialogContentText.js","app/views/material-kit/dialog/SimpleAlerts.jsx","app/views/material-kit/dialog/DialogTransition.jsx","app/views/material-kit/dialog/FormDialog.jsx","app/views/material-kit/dialog/CustomizedDialog.jsx","app/views/material-kit/dialog/FullScreenDialog.jsx","app/views/material-kit/dialog/OptimalSizeDialog.jsx","app/views/material-kit/dialog/ResponsiveDialog.jsx","app/views/material-kit/dialog/ConfirmationDialog.jsx","app/views/material-kit/dialog/AppDialog.jsx"],"names":["module","exports","obj","__esModule","_interopRequireDefault","require","Object","defineProperty","value","default","path","displayName","Component","_react","memo","forwardRef","props","ref","createElement","_SvgIcon","_extends2","process","muiName","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_default","d","DialogContent","React","classes","className","_props$dividers","dividers","other","_objectWithoutProperties","clsx","root","withStyles","theme","flex","WebkitOverflowScrolling","overflowY","padding","paddingTop","borderTop","concat","palette","divider","borderBottom","name","DialogActions","_props$disableSpacing","disableSpacing","spacing","display","alignItems","justifyContent","marginLeft","ListItemText","children","_props$disableTypogra","disableTypography","_props$inset","inset","primaryProp","primary","primaryTypographyProps","secondaryProp","secondary","secondaryTypographyProps","dense","ListContext","type","Typography","variant","component","color","multiline","minWidth","marginTop","marginBottom","paddingLeft","Divider","_props$absolute","absolute","_props$component","_props$flexItem","flexItem","_props$light","light","_props$orientation","orientation","_props$role","role","undefined","_props$variant","vertical","height","margin","border","flexShrink","backgroundColor","position","bottom","left","width","fade","middle","marginRight","alignSelf","createSvgIcon","Avatar","alt","childrenProp","imgProps","sizes","src","srcSet","loaded","_ref","_React$useState","setLoaded","active","image","Image","onload","onerror","useLoaded","hasImg","hasImgNotFailing","img","Person","fallback","system","colorDefault","fontFamily","typography","fontSize","pxToRem","lineHeight","borderRadius","overflow","userSelect","background","grey","circle","rounded","shape","square","textAlign","objectFit","textIndent","ListItemAvatar","context","alignItemsFlexStart","DialogTitle","emails","useStyles","makeStyles","avatar","blue","SimpleDialog","onClose","selectedValue","handleListItemClick","Dialog","aria-labelledby","id","List","map","email","ListItem","button","onClick","SimpleDialogDemo","useState","open","setOpen","setSelectedValue","Button","DialogContentText","AlertDialog","handleClose","aria-describedby","autoFocus","Transition","Slide","direction","AlertDialogSlide","TransitionComponent","keepMounted","FormDialog","TextField","label","fullWidth","closeButton","right","top","IconButton","aria-label","MuiDialogContent","MuiDialogActions","CustomizedDialogs","state","handleClickOpen","setState","gutterBottom","appBar","title","FullScreenDialog","fullScreen","AppBar","Toolbar","edge","form","flexDirection","formControl","formControlLabel","MaxWidthDialog","setFullWidth","maxWidth","setMaxWidth","Fragment","noValidate","FormControl","InputLabel","htmlFor","Select","onChange","event","inputProps","MenuItem","FormControlLabel","control","Switch","checked","ResponsiveDialog","useTheme","useMediaQuery","breakpoints","down","options","ConfirmationDialogRaw","valueProp","setValue","radioGroupRef","useRef","useEffect","disableBackdropClick","disableEscapeKeyDown","onEntering","current","focus","RadioGroup","newValue","option","Radio","paper","maxHeight","ConfirmationDialog","disabled","aria-haspopup","aria-controls","AppDialog","routeSegments","CustomizedDialog"],"mappings":"kGAAA,+D,mBCMAA,EAAOC,QANP,SAAgCC,GAC9B,OAAOA,GAAOA,EAAIC,WAAaD,EAAM,CACnC,QAAWA,K,kCCAf,IAAIE,EAAyBC,EAAQ,MAErCC,OAAOC,eAAeN,EAAS,aAAc,CAC3CO,OAAO,IAETP,EAAQQ,QAQR,SAAuBC,EAAMC,GAC3B,IAAIC,EAAYC,EAAOJ,QAAQK,KAAKD,EAAOJ,QAAQM,YAAW,SAAUC,EAAOC,GAC7E,OAAOJ,EAAOJ,QAAQS,cAAcC,EAASV,SAAS,EAAIW,EAAUX,SAAS,CAC3EQ,IAAKA,GACJD,GAAQN,OAGTW,EAKJ,OADAT,EAAUU,QAAUH,EAASV,QAAQa,QAC9BV,GAlBT,IAAIQ,EAAYhB,EAAuBC,EAAQ,OAE3CQ,EAAST,EAAuBC,EAAQ,IAExCc,EAAWf,EAAuBC,EAAQ,Q,mBCb9C,SAASkB,IAeP,OAdAvB,EAAOC,QAAUsB,EAAWjB,OAAOkB,QAAU,SAAUC,GACrD,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAASF,UAAUD,GAEvB,IAAK,IAAII,KAAOD,EACVvB,OAAOyB,UAAUC,eAAeC,KAAKJ,EAAQC,KAC/CL,EAAOK,GAAOD,EAAOC,IAK3B,OAAOL,GAGFF,EAASW,MAAMC,KAAMR,WAG9B3B,EAAOC,QAAUsB,G,kCChBjB,IAAInB,EAAyBC,EAAQ,MAErCC,OAAOC,eAAeN,EAAS,aAAc,CAC3CO,OAAO,IAETP,EAAQQ,aAAU,EAElB,IAAII,EAAST,EAAuBC,EAAQ,IAIxC+B,GAAW,EAFMhC,EAAuBC,EAAQ,OAElBI,SAASI,EAAOJ,QAAQS,cAAc,OAAQ,CAC9EmB,EAAG,0GACD,SAEJpC,EAAQQ,QAAU2B,G,kCCjBlB,8CA6BIE,EAAgBC,cAAiB,SAAuBvB,EAAOC,GACjE,IAAIuB,EAAUxB,EAAMwB,QAChBC,EAAYzB,EAAMyB,UAClBC,EAAkB1B,EAAM2B,SACxBA,OAA+B,IAApBD,GAAqCA,EAChDE,EAAQC,YAAyB7B,EAAO,CAAC,UAAW,YAAa,aAErE,OAAOuB,gBAAoB,MAAOhB,YAAS,CACzCkB,UAAWK,YAAKN,EAAQO,KAAMN,EAAWE,GAAYH,EAAQG,UAC7D1B,IAAKA,GACJ2B,OAwBUI,iBAzDK,SAAgBC,GAClC,MAAO,CAELF,KAAM,CACJG,KAAM,WACNC,wBAAyB,QAEzBC,UAAW,OACXC,QAAS,WACT,gBAAiB,CAEfC,WAAY,KAKhBX,SAAU,CACRU,QAAS,YACTE,UAAW,aAAaC,OAAOP,EAAMQ,QAAQC,SAC7CC,aAAc,aAAaH,OAAOP,EAAMQ,QAAQC,aAsCpB,CAChCE,KAAM,oBADOZ,CAEZV,I,kCCjEH,8CAuBIuB,EAAgBtB,cAAiB,SAAuBvB,EAAOC,GACjE,IAAI6C,EAAwB9C,EAAM+C,eAC9BA,OAA2C,IAA1BD,GAA2CA,EAC5DtB,EAAUxB,EAAMwB,QAChBC,EAAYzB,EAAMyB,UAClBG,EAAQC,YAAyB7B,EAAO,CAAC,iBAAkB,UAAW,cAE1E,OAAOuB,gBAAoB,MAAOhB,YAAS,CACzCkB,UAAWK,YAAKN,EAAQO,KAAMN,GAAYsB,GAAkBvB,EAAQwB,SACpE/C,IAAKA,GACJ2B,OAwBUI,gBAnDK,CAElBD,KAAM,CACJkB,QAAS,OACTC,WAAY,SACZb,QAAS,EACTc,eAAgB,WAChBjB,KAAM,YAIRc,QAAS,CACP,yBAA0B,CACxBI,WAAY,KAsCgB,CAChCR,KAAM,oBADOZ,CAEZa,I,kCC3DH,iEAqCIQ,EAAe9B,cAAiB,SAAsBvB,EAAOC,GAC/D,IAAIqD,EAAWtD,EAAMsD,SACjB9B,EAAUxB,EAAMwB,QAChBC,EAAYzB,EAAMyB,UAClB8B,EAAwBvD,EAAMwD,kBAC9BA,OAA8C,IAA1BD,GAA2CA,EAC/DE,EAAezD,EAAM0D,MACrBA,OAAyB,IAAjBD,GAAkCA,EAC1CE,EAAc3D,EAAM4D,QACpBC,EAAyB7D,EAAM6D,uBAC/BC,EAAgB9D,EAAM+D,UACtBC,EAA2BhE,EAAMgE,yBACjCpC,EAAQC,YAAyB7B,EAAO,CAAC,WAAY,UAAW,YAAa,oBAAqB,QAAS,UAAW,yBAA0B,YAAa,6BAG7JiE,EADoB1C,aAAiB2C,KACXD,MAE1BL,EAAyB,MAAfD,EAAsBA,EAAcL,EAEnC,MAAXM,GAAmBA,EAAQO,OAASC,KAAeZ,IACrDI,EAAUrC,gBAAoB6C,IAAY7D,YAAS,CACjD8D,QAASJ,EAAQ,QAAU,QAC3BxC,UAAWD,EAAQoC,QACnBU,UAAW,QACVT,GAAyBD,IAG9B,IAAIG,EAAYD,EAUhB,OARiB,MAAbC,GAAqBA,EAAUI,OAASC,KAAeZ,IACzDO,EAAYxC,gBAAoB6C,IAAY7D,YAAS,CACnD8D,QAAS,QACT5C,UAAWD,EAAQuC,UACnBQ,MAAO,iBACNP,GAA2BD,IAGzBxC,gBAAoB,MAAOhB,YAAS,CACzCkB,UAAWK,YAAKN,EAAQO,KAAMN,EAAWwC,GAASzC,EAAQyC,MAAOP,GAASlC,EAAQkC,MAAOE,GAAWG,GAAavC,EAAQgD,WACzHvE,IAAKA,GACJ2B,GAAQgC,EAASG,MAuDP/B,gBA5HK,CAElBD,KAAM,CACJG,KAAM,WACNuC,SAAU,EACVC,UAAW,EACXC,aAAc,GAIhBH,UAAW,CACTE,UAAW,EACXC,aAAc,GAIhBV,MAAO,GAGPP,MAAO,CACLkB,YAAa,IAIfhB,QAAS,GAGTG,UAAW,IAiGqB,CAChCnB,KAAM,mBADOZ,CAEZqB,I,kCCtIH,sDAwDIwB,EAAUtD,cAAiB,SAAiBvB,EAAOC,GACrD,IAAI6E,EAAkB9E,EAAM+E,SACxBA,OAA+B,IAApBD,GAAqCA,EAChDtD,EAAUxB,EAAMwB,QAChBC,EAAYzB,EAAMyB,UAClBuD,EAAmBhF,EAAMsE,UACzB1E,OAAiC,IAArBoF,EAA8B,KAAOA,EACjDC,EAAkBjF,EAAMkF,SACxBA,OAA+B,IAApBD,GAAqCA,EAChDE,EAAenF,EAAMoF,MACrBA,OAAyB,IAAjBD,GAAkCA,EAC1CE,EAAqBrF,EAAMsF,YAC3BA,OAAqC,IAAvBD,EAAgC,aAAeA,EAC7DE,EAAcvF,EAAMwF,KACpBA,OAAuB,IAAhBD,EAAuC,OAAd3F,EAAqB,iBAAc6F,EAAYF,EAC/EG,EAAiB1F,EAAMqE,QACvBA,OAA6B,IAAnBqB,EAA4B,YAAcA,EACpD9D,EAAQC,YAAyB7B,EAAO,CAAC,WAAY,UAAW,YAAa,YAAa,WAAY,QAAS,cAAe,OAAQ,YAE1I,OAAOuB,gBAAoB3B,EAAWW,YAAS,CAC7CkB,UAAWK,YAAKN,EAAQO,KAAMN,EAAuB,cAAZ4C,GAA2B7C,EAAQ6C,GAAUU,GAAYvD,EAAQuD,SAAUG,GAAY1D,EAAQ0D,SAAUE,GAAS5D,EAAQ4D,MAAuB,aAAhBE,GAA8B9D,EAAQmE,UAChNH,KAAMA,EACNvF,IAAKA,GACJ2B,OAmDUI,iBA3HK,SAAgBC,GAClC,MAAO,CAELF,KAAM,CACJ6D,OAAQ,EACRC,OAAQ,EAERC,OAAQ,OACRC,WAAY,EACZC,gBAAiB/D,EAAMQ,QAAQC,SAIjCqC,SAAU,CACRkB,SAAU,WACVC,OAAQ,EACRC,KAAM,EACNC,MAAO,QAIT1C,MAAO,CACLN,WAAY,IAIdgC,MAAO,CACLY,gBAAiBK,YAAKpE,EAAMQ,QAAQC,QAAS,MAI/C4D,OAAQ,CACNlD,WAAYnB,EAAMe,QAAQ,GAC1BuD,YAAatE,EAAMe,QAAQ,IAI7B2C,SAAU,CACRC,OAAQ,OACRQ,MAAO,GAITlB,SAAU,CACRsB,UAAW,UACXZ,OAAQ,WA8EoB,CAChChD,KAAM,cADOZ,CAEZ6C,I,kCClIH,IAAIzF,EAAyBC,EAAQ,MAErCC,OAAOC,eAAeN,EAAS,aAAc,CAC3CO,OAAO,IAETP,EAAQQ,aAAU,EAElB,IAAII,EAAST,EAAuBC,EAAQ,IAIxC+B,GAAW,EAFMhC,EAAuBC,EAAQ,OAElBI,SAASI,EAAOJ,QAAQS,cAAc,OAAQ,CAC9EmB,EAAG,kHACD,UAEJpC,EAAQQ,QAAU2B,G,kCCflB,IAAIhC,EAAyBC,EAAQ,MAErCC,OAAOC,eAAeN,EAAS,aAAc,CAC3CO,OAAO,IAETP,EAAQQ,aAAU,EAElB,IAAII,EAAST,EAAuBC,EAAQ,IAIxC+B,GAAW,EAFMhC,EAAuBC,EAAQ,OAElBI,SAASI,EAAOJ,QAAQS,cAAc,OAAQ,CAC9EmB,EAAG,wCACD,OAEJpC,EAAQQ,QAAU2B,G,wFCXHqF,cAAclF,gBAAoB,OAAQ,CACvDF,EAAG,kHACD,UCoGJ,IAAIqF,EAASnF,cAAiB,SAAgBvB,EAAOC,GACnD,IAAI0G,EAAM3G,EAAM2G,IACZC,EAAe5G,EAAMsD,SACrB9B,EAAUxB,EAAMwB,QAChBC,EAAYzB,EAAMyB,UAClBuD,EAAmBhF,EAAMsE,UACzB1E,OAAiC,IAArBoF,EAA8B,MAAQA,EAClD6B,EAAW7G,EAAM6G,SACjBC,EAAQ9G,EAAM8G,MACdC,EAAM/G,EAAM+G,IACZC,EAAShH,EAAMgH,OACftB,EAAiB1F,EAAMqE,QACvBA,OAA6B,IAAnBqB,EAA4B,SAAWA,EACjD9D,EAAQC,YAAyB7B,EAAO,CAAC,MAAO,WAAY,UAAW,YAAa,YAAa,WAAY,QAAS,MAAO,SAAU,YAEvIsD,EAAW,KAEX2D,EA3DN,SAAmBC,GACjB,IAAIH,EAAMG,EAAKH,IACXC,EAASE,EAAKF,OAEdG,EAAkB5F,YAAe,GACjC0F,EAASE,EAAgB,GACzBC,EAAYD,EAAgB,GAiChC,OA/BA5F,aAAgB,WACd,GAAKwF,GAAQC,EAAb,CAIAI,GAAU,GACV,IAAIC,GAAS,EACTC,EAAQ,IAAIC,MAoBhB,OAnBAD,EAAMP,IAAMA,EACZO,EAAMN,OAASA,EAEfM,EAAME,OAAS,WACRH,GAILD,EAAU,WAGZE,EAAMG,QAAU,WACTJ,GAILD,EAAU,UAGL,WACLC,GAAS,MAEV,CAACN,EAAKC,IACFC,EAoBMS,CAAU,CACrBX,IAAKA,EACLC,OAAQA,IAENW,EAASZ,GAAOC,EAChBY,EAAmBD,GAAqB,UAAXV,EAoBjC,OAjBE3D,EADEsE,EACSrG,gBAAoB,MAAOhB,YAAS,CAC7CoG,IAAKA,EACLI,IAAKA,EACLC,OAAQA,EACRF,MAAOA,EACPrF,UAAWD,EAAQqG,KAClBhB,IACsB,MAAhBD,EACEA,EACFe,GAAUhB,EACRA,EAAI,GAEJpF,gBAAoBuG,EAAQ,CACrCrG,UAAWD,EAAQuG,WAIhBxG,gBAAoB3B,EAAWW,YAAS,CAC7CkB,UAAWK,YAAKN,EAAQO,KAAMP,EAAQwG,OAAQxG,EAAQ6C,GAAU5C,GAAYmG,GAAoBpG,EAAQyG,cACxGhI,IAAKA,GACJ2B,GAAQ0B,MA2DEtB,iBA7MK,SAAgBC,GAClC,MAAO,CAELF,KAAM,CACJkE,SAAU,WACVhD,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChB4C,WAAY,EACZK,MAAO,GACPR,OAAQ,GACRsC,WAAYjG,EAAMkG,WAAWD,WAC7BE,SAAUnG,EAAMkG,WAAWE,QAAQ,IACnCC,WAAY,EACZC,aAAc,MACdC,SAAU,SACVC,WAAY,QAIdR,aAAc,CACZ1D,MAAOtC,EAAMQ,QAAQiG,WAAWjJ,QAChCuG,gBAAwC,UAAvB/D,EAAMQ,QAAQ0B,KAAmBlC,EAAMQ,QAAQkG,KAAK,KAAO1G,EAAMQ,QAAQkG,KAAK,MAIjGC,OAAQ,GAGRC,QAAS,CACPN,aAActG,EAAM6G,MAAMP,cAI5BQ,OAAQ,CACNR,aAAc,GAIhBV,IAAK,CACHzB,MAAO,OACPR,OAAQ,OACRoD,UAAW,SAEXC,UAAW,QAEX1E,MAAO,cAEP2E,WAAY,KAIdnB,SAAU,CACR3B,MAAO,MACPR,OAAQ,UAuJoB,CAChChD,KAAM,aADOZ,CAEZ0E,I,4KC/LCyC,EAAiB5H,cAAiB,SAAwBvB,EAAOC,GACnE,IAAIuB,EAAUxB,EAAMwB,QAChBC,EAAYzB,EAAMyB,UAClBG,EAAQC,YAAyB7B,EAAO,CAAC,UAAW,cAEpDoJ,EAAU7H,aAAiB2C,KAC/B,OAAO3C,gBAAoB,MAAOhB,YAAS,CACzCkB,UAAWK,YAAKN,EAAQO,KAAMN,EAAkC,eAAvB2H,EAAQlG,YAA+B1B,EAAQ6H,qBACxFpJ,IAAKA,GACJ2B,OAmBUI,cA5CK,CAElBD,KAAM,CACJ0C,SAAU,GACVsB,WAAY,GAIdsD,oBAAqB,CACnB3E,UAAW,IAmCmB,CAChC9B,KAAM,qBADOZ,CAEZmH,G,oBCtCCG,EAAc/H,cAAiB,SAAqBvB,EAAOC,GAC7D,IAAIqD,EAAWtD,EAAMsD,SACjB9B,EAAUxB,EAAMwB,QAChBC,EAAYzB,EAAMyB,UAClB8B,EAAwBvD,EAAMwD,kBAC9BA,OAA8C,IAA1BD,GAA2CA,EAC/D3B,EAAQC,YAAyB7B,EAAO,CAAC,WAAY,UAAW,YAAa,sBAEjF,OAAOuB,gBAAoB,MAAOhB,YAAS,CACzCkB,UAAWK,YAAKN,EAAQO,KAAMN,GAC9BxB,IAAKA,GACJ2B,GAAQ4B,EAAoBF,EAAW/B,gBAAoB6C,IAAY,CACxEE,UAAW,KACXD,QAAS,MACRf,OAyBUtB,cA/CK,CAElBD,KAAM,CACJ8D,OAAQ,EACRxD,QAAS,YACTH,KAAM,aA0CwB,CAChCU,KAAM,kBADOZ,CAEZsH,G,yDCxCGC,EAAS,CAAC,qBAAsB,oBAChCC,EAAYC,YAAW,CAC3BC,OAAQ,CACN1D,gBAAiB2D,IAAK,KACtBpF,MAAOoF,IAAK,QAIhB,SAASC,EAAa5J,GACpB,IAAMwB,EAAUgI,IACRK,EAAqC7J,EAArC6J,QAASC,EAA4B9J,EAA5B8J,cAAkBlI,EAFR,YAEkB5B,EAFlB,6BAQ3B,SAAS+J,EAAoBvK,GAC3BqK,EAAQrK,GAGV,OACE,kBAACwK,EAAA,EAAD,eACEH,QAVJ,WACEA,EAAQC,IAUNG,kBAAgB,uBACZrI,GAEJ,kBAAC,EAAD,CAAasI,GAAG,uBAAhB,sBACA,kBAACC,EAAA,EAAD,KACGZ,EAAOa,KAAI,SAAAC,GAAK,OACf,kBAACC,EAAA,EAAD,CACEC,QAAM,EACNC,QAAS,kBAAMT,EAAoBM,IACnCvJ,IAAKuJ,GAEL,kBAAC,EAAD,KACE,kBAAC3D,EAAA,EAAD,CAAQjF,UAAWD,EAAQkI,QACzB,kBAAC,IAAD,QAGJ,kBAACrG,EAAA,EAAD,CAAcO,QAASyG,QAI3B,kBAACC,EAAA,EAAD,CAAUC,QAAM,EAACC,QAAS,kBAAMT,EAAoB,gBAClD,kBAAC,EAAD,KACE,kBAACrD,EAAA,EAAD,KACE,kBAAC,IAAD,QAGJ,kBAACrD,EAAA,EAAD,CAAcO,QAAQ,mBAajB,SAAS6G,IAAoB,IAAD,EACjBlJ,IAAMmJ,UAAS,GADE,mBAClCC,EADkC,KAC5BC,EAD4B,OAECrJ,IAAMmJ,SAASnB,EAAO,IAFvB,mBAElCO,EAFkC,KAEnBe,EAFmB,KAazC,OACE,6BACE,kBAACzG,EAAA,EAAD,CAAYC,QAAQ,aAApB,aAA2CyF,GAC3C,6BACA,kBAACgB,EAAA,EAAD,CAAQzG,QAAQ,WAAWE,MAAM,UAAUiG,QAb/C,WACEI,GAAQ,KAYN,sBAGA,kBAAChB,EAAD,CACEE,cAAeA,EACfa,KAAMA,EACNd,QAfc,SAAArK,GAClBoL,GAAQ,GACRC,EAAiBrL,O,wBC7EjBuL,EAAoBxJ,cAAiB,SAA2BvB,EAAOC,GACzE,OAAOsB,gBAAoB6C,IAAY7D,YAAS,CAC9C+D,UAAW,IACXD,QAAS,QACTE,MAAO,gBACPtE,IAAKA,GACJD,OAcUgC,cA1BK,CAElBD,KAAM,CACJ4C,aAAc,KAuBgB,CAChC/B,KAAM,wBADOZ,CAEZ+I,GCzBY,SAASC,IAAe,IAAD,EACZzJ,IAAMmJ,UAAS,GADH,mBAC7BC,EAD6B,KACvBC,EADuB,KAOpC,SAASK,IACPL,GAAQ,GAGV,OACE,6BACE,kBAACE,EAAA,EAAD,CAAQzG,QAAQ,WAAWE,MAAM,UAAUiG,QAV/C,WACEI,GAAQ,KASN,qBAGA,kBAACZ,EAAA,EAAD,CACEW,KAAMA,EACNd,QAASoB,EACThB,kBAAgB,qBAChBiB,mBAAiB,4BAEjB,kBAAC,EAAD,CAAahB,GAAG,sBACb,kCAEH,kBAAC5I,EAAA,EAAD,KACE,kBAAC,EAAD,CAAmB4I,GAAG,4BAAtB,kIAKF,kBAACrH,EAAA,EAAD,KACE,kBAACiI,EAAA,EAAD,CAAQN,QAASS,EAAa1G,MAAM,WAApC,YAGA,kBAACuG,EAAA,EAAD,CAAQN,QAASS,EAAa1G,MAAM,UAAU4G,WAAS,GAAvD,Y,cClCJC,EAAa7J,IAAMxB,YAAW,SAAoBC,EAAOC,GAC7D,OAAO,kBAACoL,EAAA,EAAD,eAAOC,UAAU,KAAKrL,IAAKA,GAASD,OAG9B,SAASuL,IAAoB,IAAD,EACjBhK,IAAMmJ,UAAS,GADE,mBAClCC,EADkC,KAC5BC,EAD4B,KAOzC,SAASK,IACPL,GAAQ,GAGV,OACE,6BACE,kBAACE,EAAA,EAAD,CAAQzG,QAAQ,WAAWE,MAAM,UAAUiG,QAV/C,WACEI,GAAQ,KASN,yBAGA,kBAACZ,EAAA,EAAD,CACEW,KAAMA,EACNa,oBAAqBJ,EACrBK,aAAW,EACX5B,QAASoB,EACThB,kBAAgB,2BAChBiB,mBAAiB,kCAEjB,kBAAC,EAAD,CAAahB,GAAG,4BACb,kCAEH,kBAAC5I,EAAA,EAAD,KACE,kBAAC,EAAD,CAAmB4I,GAAG,kCAAtB,kIAKF,kBAACrH,EAAA,EAAD,KACE,kBAACiI,EAAA,EAAD,CAAQN,QAASS,EAAa1G,MAAM,WAApC,YAGA,kBAACuG,EAAA,EAAD,CAAQN,QAASS,EAAa1G,MAAM,WAApC,Y,aCzCK,SAASmH,IAAc,IAAD,EACXnK,IAAMmJ,UAAS,GADJ,mBAC5BC,EAD4B,KACtBC,EADsB,KAOnC,SAASK,IACPL,GAAQ,GAGV,OACE,6BACE,kBAACE,EAAA,EAAD,CAAQzG,QAAQ,WAAWE,MAAM,UAAUiG,QAV/C,WACEI,GAAQ,KASN,oBAGA,kBAACZ,EAAA,EAAD,CACEW,KAAMA,EACNd,QAASoB,EACThB,kBAAgB,qBAEhB,kBAAC,EAAD,CAAaC,GAAG,qBAAhB,aACA,kBAAC5I,EAAA,EAAD,KACE,kBAAC,EAAD,+GAIA,kBAACqK,EAAA,EAAD,CACER,WAAS,EACTtF,OAAO,QACPqE,GAAG,OACH0B,MAAM,gBACNzH,KAAK,QACL0H,WAAS,KAGb,kBAAChJ,EAAA,EAAD,KACE,kBAACiI,EAAA,EAAD,CAAQzG,QAAQ,WAAWE,MAAM,YAAYiG,QAASS,GAAtD,UAGA,kBAACH,EAAA,EAAD,CAAQN,QAASS,EAAa1G,MAAM,WAApC,gB,yECzBJ+E,EAActH,aAbL,SAAAC,GAAK,MAAK,CACvBF,KAAM,CACJ8D,OAAQ,EACRxD,QAASJ,EAAMe,QAAQ,IAEzB8I,YAAa,CACX7F,SAAU,WACV8F,MAAO9J,EAAMe,QAAQ,GACrBgJ,IAAK/J,EAAMe,QAAQ,GACnBuB,MAAOtC,EAAMQ,QAAQkG,KAAK,SAIV3G,EAAmB,SAAAhC,GAAU,IACvCsD,EAA+BtD,EAA/BsD,SAAU9B,EAAqBxB,EAArBwB,QAASqI,EAAY7J,EAAZ6J,QAC3B,OACE,kBAAC,EAAD,CAAgBrG,mBAAiB,EAAC/B,UAAWD,EAAQO,MACnD,kBAACqC,EAAA,EAAD,CAAYC,QAAQ,MAAMf,GACzBuG,EACC,kBAACoC,EAAA,EAAD,CACEC,aAAW,QACXzK,UAAWD,EAAQsK,YACnBtB,QAASX,GAET,kBAAC,IAAD,OAEA,SAKJvI,EAAgBU,aAAW,SAAAC,GAAK,MAAK,CACzCF,KAAM,CACJM,QAASJ,EAAMe,QAAQ,OAFLhB,CAIlBmK,KAEEtJ,EAAgBb,aAAW,SAAAC,GAAK,MAAK,CACzCF,KAAM,CACJ8D,OAAQ,EACRxD,QAASJ,EAAMe,QAAQ,OAHLhB,CAKlBoK,KA+DWC,G,2MA5DbC,MAAQ,CACN3B,MAAM,G,EAGR4B,gBAAkB,WAChB,EAAKC,SAAS,CACZ7B,MAAM,K,EAIVM,YAAc,WACZ,EAAKuB,SAAS,CAAE7B,MAAM,K,wEAItB,OACE,6BACE,kBAACG,EAAA,EAAD,CACEzG,QAAQ,WACRE,MAAM,YACNiG,QAASrJ,KAAKoL,iBAHhB,eAOA,kBAACvC,EAAA,EAAD,CACEH,QAAS1I,KAAK8J,YACdhB,kBAAgB,0BAChBU,KAAMxJ,KAAKmL,MAAM3B,MAEjB,kBAAC,EAAD,CAAaT,GAAG,0BAA0BL,QAAS1I,KAAK8J,aAAxD,eAGA,kBAAC,EAAD,CAAetJ,UAAQ,GACrB,kBAACyC,EAAA,EAAD,CAAYqI,cAAY,GAAxB,gLAKA,kBAACrI,EAAA,EAAD,CAAYqI,cAAY,GAAxB,8IAKA,kBAACrI,EAAA,EAAD,CAAYqI,cAAY,GAAxB,+LAMF,kBAAC,EAAD,KACE,kBAAC3B,EAAA,EAAD,CAAQN,QAASrJ,KAAK8J,YAAa1G,MAAM,WAAzC,uB,GAnDoBhD,IAAM3B,W,iCCxChC4J,GAAYC,aAAW,SAAAxH,GAAK,MAAK,CACrCyK,OAAQ,CACNzG,SAAU,YAEZ0G,MAAO,CACLvJ,WAAYnB,EAAMe,QAAQ,GAC1Bd,KAAM,OAIJkJ,GAAa7J,IAAMxB,YAAW,SAAoBC,EAAOC,GAC7D,OAAO,kBAACoL,EAAA,EAAD,eAAOC,UAAU,KAAKrL,IAAKA,GAASD,OAG9B,SAAS4M,KACtB,IAAMpL,EAAUgI,KADyB,EAEjBjI,IAAMmJ,UAAS,GAFE,mBAElCC,EAFkC,KAE5BC,EAF4B,KAQzC,SAASK,IACPL,GAAQ,GAGV,OACE,6BACE,kBAACE,EAAA,EAAD,CAAQzG,QAAQ,WAAWE,MAAM,UAAUiG,QAV/C,WACEI,GAAQ,KASN,2BAGA,kBAACZ,EAAA,EAAD,CACE6C,YAAU,EACVlC,KAAMA,EACNd,QAASoB,EACTO,oBAAqBJ,IAErB,kBAAC0B,GAAA,EAAD,CAAQrL,UAAWD,EAAQkL,QACzB,kBAACK,GAAA,EAAD,KACE,kBAACd,EAAA,EAAD,CACEe,KAAK,QACLzI,MAAM,UACNiG,QAASS,EACTiB,aAAW,SAEX,kBAAC,IAAD,OAEF,kBAAC9H,EAAA,EAAD,CAAYC,QAAQ,KAAK5C,UAAWD,EAAQmL,OAA5C,SAGA,kBAAC7B,EAAA,EAAD,CAAQvG,MAAM,UAAUiG,QAASS,GAAjC,UAKJ,kBAACd,EAAA,EAAD,KACE,kBAACG,EAAA,EAAD,CAAUC,QAAM,GACd,kBAAClH,EAAA,EAAD,CAAcO,QAAQ,iBAAiBG,UAAU,aAEnD,kBAACc,GAAA,EAAD,MACA,kBAACyF,EAAA,EAAD,CAAUC,QAAM,GACd,kBAAClH,EAAA,EAAD,CACEO,QAAQ,gCACRG,UAAU,e,sEC/DlByF,GAAYC,aAAW,SAAAxH,GAAK,MAAK,CACrCgL,KAAM,CACJhK,QAAS,OACTiK,cAAe,SACfrH,OAAQ,OACRO,MAAO,eAET+G,YAAa,CACXzI,UAAWzC,EAAMe,QAAQ,GACzByB,SAAU,KAEZ2I,iBAAkB,CAChB1I,UAAWzC,EAAMe,QAAQ,QAId,SAASqK,KACtB,IAAM7L,EAAUgI,KADuB,EAEfjI,IAAMmJ,UAAS,GAFA,mBAEhCC,EAFgC,KAE1BC,EAF0B,OAGLrJ,IAAMmJ,UAAS,GAHV,mBAGhCmB,EAHgC,KAGrByB,EAHqB,OAIP/L,IAAMmJ,SAAS,MAJR,mBAIhC6C,EAJgC,KAItBC,EAJsB,KAUvC,SAASvC,IACPL,GAAQ,GAWV,OACE,kBAAC,IAAM6C,SAAP,KACE,kBAAC3C,EAAA,EAAD,CAAQzG,QAAQ,WAAWE,MAAM,UAAUiG,QAlB/C,WACEI,GAAQ,KAiBN,yBAGA,kBAACZ,EAAA,EAAD,CACE6B,UAAWA,EACX0B,SAAUA,EACV5C,KAAMA,EACNd,QAASoB,EACThB,kBAAgB,0BAEhB,kBAAC,EAAD,CAAaC,GAAG,0BAAhB,kBACA,kBAAC5I,EAAA,EAAD,KACE,kBAAC,EAAD,kEAGA,0BAAMG,UAAWD,EAAQyL,KAAMS,YAAU,GACvC,kBAACC,GAAA,EAAD,CAAalM,UAAWD,EAAQ2L,aAC9B,kBAACS,GAAA,EAAD,CAAYC,QAAQ,aAApB,YACA,kBAACC,GAAA,EAAD,CACEtO,MAAO+N,EACPQ,SA9Bd,SAA8BC,GAC5BR,EAAYQ,EAAMvN,OAAOjB,QA8BbyO,WAAY,CACVrL,KAAM,YACNsH,GAAI,cAGN,kBAACgE,GAAA,EAAD,CAAU1O,OAAO,GAAjB,SACA,kBAAC0O,GAAA,EAAD,CAAU1O,MAAM,MAAhB,MACA,kBAAC0O,GAAA,EAAD,CAAU1O,MAAM,MAAhB,MACA,kBAAC0O,GAAA,EAAD,CAAU1O,MAAM,MAAhB,MACA,kBAAC0O,GAAA,EAAD,CAAU1O,MAAM,MAAhB,MACA,kBAAC0O,GAAA,EAAD,CAAU1O,MAAM,MAAhB,QAGJ,kBAAC2O,GAAA,EAAD,CACE1M,UAAWD,EAAQ4L,iBACnBgB,QACE,kBAACC,GAAA,EAAD,CACEC,QAASzC,EACTkC,SA7ChB,SAA+BC,GAC7BV,EAAaU,EAAMvN,OAAO6N,UA6CZ9O,MAAM,cAGVoM,MAAM,iBAIZ,kBAAC/I,EAAA,EAAD,KACE,kBAACiI,EAAA,EAAD,CAAQN,QAASS,EAAa1G,MAAM,WAApC,Y,wBC7FK,SAASgK,KAAoB,IAAD,EACjBhN,IAAMmJ,UAAS,GADE,mBAClCC,EADkC,KAC5BC,EAD4B,KAEnC3I,EAAQuM,eACR3B,EAAa4B,aAAcxM,EAAMyM,YAAYC,KAAK,OAMxD,SAAS1D,IACPL,GAAQ,GAGV,OACE,6BACE,kBAACE,EAAA,EAAD,CAAQzG,QAAQ,WAAWE,MAAM,UAAUiG,QAV/C,WACEI,GAAQ,KASN,0BAGA,kBAACZ,EAAA,EAAD,CACE6C,WAAYA,EACZlC,KAAMA,EACNd,QAASoB,EACThB,kBAAgB,2BAEhB,kBAAC,EAAD,CAAaC,GAAG,2BACb,kCAEH,kBAAC5I,EAAA,EAAD,KACE,kBAAC,EAAD,uIAKF,kBAACuB,EAAA,EAAD,KACE,kBAACiI,EAAA,EAAD,CAAQN,QAASS,EAAa1G,MAAM,WAApC,YAGA,kBAACuG,EAAA,EAAD,CAAQN,QAASS,EAAa1G,MAAM,UAAU4G,WAAS,GAAvD,Y,0BChCJyD,GAAU,CACd,OACA,QACA,WACA,QACA,WACA,gBACA,OACA,SACA,SACA,QACA,QACA,UACA,SACA,WAGF,SAASC,GAAsB7O,GAAQ,IAC7B6J,EAA8C7J,EAA9C6J,QAAgBiF,EAA8B9O,EAArCR,MAAkBmL,EAAmB3K,EAAnB2K,KAAS/I,EADR,YACkB5B,EADlB,8BAEVuB,IAAMmJ,SAASoE,GAFL,mBAE7BtP,EAF6B,KAEtBuP,EAFsB,KAG9BC,EAAgBzN,IAAM0N,OAAO,MA0BnC,OAxBA1N,IAAM2N,WAAU,WACTvE,GACHoE,EAASD,KAEV,CAACA,EAAWnE,IAqBb,kBAACX,EAAA,EAAD,eACEmF,sBAAoB,EACpBC,sBAAoB,EACpB7B,SAAS,KACT8B,WAvBJ,WAC+B,MAAzBL,EAAcM,SAChBN,EAAcM,QAAQC,SAsBtBtF,kBAAgB,4BAChBU,KAAMA,GACF/I,GAEJ,kBAAC,EAAD,CAAasI,GAAG,6BAAhB,kBACA,kBAAC5I,EAAA,EAAD,CAAeK,UAAQ,GACrB,kBAAC6N,GAAA,EAAD,CACEvP,IAAK+O,EACL9C,aAAW,WACXtJ,KAAK,WACLpD,MAAOA,EACPuO,SArBR,SAAsBC,EAAOyB,GAC3BV,EAASU,KAsBFb,GAAQxE,KAAI,SAAAsF,GAAM,OACjB,kBAACvB,GAAA,EAAD,CACE3O,MAAOkQ,EACP5O,IAAK4O,EACLtB,QAAS,kBAACuB,GAAA,EAAD,MACT/D,MAAO8D,SAKf,kBAAC7M,EAAA,EAAD,KACE,kBAACiI,EAAA,EAAD,CAAQzG,QAAQ,WAAWE,MAAM,YAAYiG,QA1CnD,WACEX,MAyCI,UAGA,kBAACiB,EAAA,EAAD,CAAQN,QAzCd,WACEX,EAAQrK,IAwCuB+E,MAAM,WAAjC,QAcR,IAAMiF,GAAYC,aAAW,SAAAxH,GAAK,MAAK,CACrCF,KAAM,CACJqE,MAAO,OACPmH,SAAU,IACVvH,gBAAiB/D,EAAMQ,QAAQiG,WAAWkH,OAE5CA,MAAO,CACLxJ,MAAO,MACPyJ,UAAW,SAIA,SAASC,KACtB,IAAMtO,EAAUgI,KAD2B,EAEnBjI,IAAMmJ,UAAS,GAFI,mBAEpCC,EAFoC,KAE9BC,EAF8B,OAGjBrJ,IAAMmJ,SAAS,SAHE,mBAGpClL,EAHoC,KAG7BuP,EAH6B,KAiB3C,OACE,yBAAKtN,UAAWD,EAAQO,MACtB,kBAACoI,EAAA,EAAD,CAAM7F,UAAU,MAAMkB,KAAK,QACzB,kBAAC8E,EAAA,EAAD,CAAUC,QAAM,EAAC7H,SAAO,EAACqN,UAAQ,EAACvK,KAAK,YACrC,kBAACnC,EAAA,EAAD,CAAcO,QAAQ,mBAExB,kBAAC0G,EAAA,EAAD,CACEC,QAAM,EACN7H,SAAO,EACPsN,gBAAc,OACdC,gBAAc,gBACd/D,aAAW,iBACX1B,QAxBR,WACEI,GAAQ,IAwBFpF,KAAK,YAEL,kBAACnC,EAAA,EAAD,CAAcO,QAAQ,iBAAiBG,UAAWvE,KAEpD,kBAAC8K,EAAA,EAAD,CAAUC,QAAM,EAAC7H,SAAO,EAACqN,UAAQ,EAACvK,KAAK,YACrC,kBAACnC,EAAA,EAAD,CACEO,QAAQ,gCACRG,UAAU,YAGd,kBAAC8K,GAAD,CACErN,QAAS,CACPoO,MAAOpO,EAAQoO,OAEjB1F,GAAG,gBACHuB,aAAW,EACXd,KAAMA,EACNd,QAtCR,SAAqB4F,GACnB7E,GAAQ,GAEJ6E,GACFV,EAASU,IAmCLjQ,MAAOA,MC1GF0Q,UAlDG,WAChB,OACE,yBAAKzO,UAAU,WACb,yBAAKA,UAAU,YACb,kBAAC,IAAD,CACE0O,cAAe,CACb,CAAEvN,KAAM,WAAYlD,KAAM,aAC1B,CAAEkD,KAAM,cAId,kBAAC,IAAD,CAAY+J,MAAM,iBAChB,kBAAClC,EAAD,OAEF,yBAAKhJ,UAAU,SACf,kBAAC,IAAD,CAAYkL,MAAM,gBAChB,kBAAC3B,EAAD,OAEF,yBAAKvJ,UAAU,SACf,kBAAC,IAAD,CAAYkL,MAAM,cAChB,kBAACpB,EAAD,OAEF,yBAAK9J,UAAU,SACf,kBAAC,IAAD,CAAYkL,MAAM,eAChB,kBAACjB,EAAD,OAEF,yBAAKjK,UAAU,SACf,kBAAC,IAAD,CAAYkL,MAAM,qBAChB,kBAACyD,GAAD,OAEF,yBAAK3O,UAAU,SACf,kBAAC,IAAD,CAAYkL,MAAM,sBAChB,kBAACC,GAAD,OAEF,yBAAKnL,UAAU,SACf,kBAAC,IAAD,CAAYkL,MAAM,yBAChB,kBAACU,GAAD,OAEF,yBAAK5L,UAAU,SACf,kBAAC,IAAD,CAAYkL,MAAM,qBAChB,kBAAC4B,GAAD,OAEF,yBAAK9M,UAAU,SACf,kBAAC,IAAD,CAAYkL,MAAM,uBAChB,kBAACmD,GAAD","file":"static/js/10.ac81ebbe.chunk.js","sourcesContent":["export { default } from './SvgIcon';","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createSvgIcon;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _SvgIcon = _interopRequireDefault(require(\"@material-ui/core/SvgIcon\"));\n\nfunction createSvgIcon(path, displayName) {\n  var Component = _react.default.memo(_react.default.forwardRef(function (props, ref) {\n    return _react.default.createElement(_SvgIcon.default, (0, _extends2.default)({\n      ref: ref\n    }, props), path);\n  }));\n\n  if (process.env.NODE_ENV !== 'production') {\n    Component.displayName = \"\".concat(displayName, \"Icon\");\n  }\n\n  Component.muiName = _SvgIcon.default.muiName;\n  return Component;\n}","function _extends() {\n  module.exports = _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      flex: '1 1 auto',\n      WebkitOverflowScrolling: 'touch',\n      // Add iOS momentum scrolling.\n      overflowY: 'auto',\n      padding: '8px 24px',\n      '&:first-child': {\n        // dialog without title\n        paddingTop: 20\n      }\n    },\n\n    /* Styles applied to the root element if `dividers={true}`. */\n    dividers: {\n      padding: '16px 24px',\n      borderTop: \"1px solid \".concat(theme.palette.divider),\n      borderBottom: \"1px solid \".concat(theme.palette.divider)\n    }\n  };\n};\nvar DialogContent = React.forwardRef(function DialogContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$dividers = props.dividers,\n      dividers = _props$dividers === void 0 ? false : _props$dividers,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"dividers\"]);\n\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, dividers && classes.dividers),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContent.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display the top and bottom dividers.\n   */\n  dividers: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogContent'\n})(DialogContent);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8,\n    justifyContent: 'flex-end',\n    flex: '0 0 auto'\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar DialogActions = React.forwardRef(function DialogActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogActions.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogActions'\n})(DialogActions);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    flex: '1 1 auto',\n    minWidth: 0,\n    marginTop: 4,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the `Typography` components if primary and secondary are set. */\n  multiline: {\n    marginTop: 6,\n    marginBottom: 6\n  },\n\n  /* Styles applied to the `Typography` components if dense. */\n  dense: {},\n\n  /* Styles applied to the root element if `inset={true}`. */\n  inset: {\n    paddingLeft: 56\n  },\n\n  /* Styles applied to the primary `Typography` component. */\n  primary: {},\n\n  /* Styles applied to the secondary `Typography` component. */\n  secondary: {}\n};\nvar ListItemText = React.forwardRef(function ListItemText(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      _props$inset = props.inset,\n      inset = _props$inset === void 0 ? false : _props$inset,\n      primaryProp = props.primary,\n      primaryTypographyProps = props.primaryTypographyProps,\n      secondaryProp = props.secondary,\n      secondaryTypographyProps = props.secondaryTypographyProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"]);\n\n  var _React$useContext = React.useContext(ListContext),\n      dense = _React$useContext.dense;\n\n  var primary = primaryProp != null ? primaryProp : children;\n\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = React.createElement(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: \"span\"\n    }, primaryTypographyProps), primary);\n  }\n\n  var secondary = secondaryProp;\n\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = React.createElement(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"textSecondary\"\n    }, secondaryTypographyProps), secondary);\n  }\n\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, dense && classes.dense, inset && classes.inset, primary && secondary && classes.multiline),\n    ref: ref\n  }, other), primary, secondary);\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemText.propTypes = {\n  /**\n   * Alias for the `primary` property.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `children` (or `primary`) text, and optional `secondary` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * If `true`, the children will be indented.\n   * This should be used if there is no left avatar or left icon.\n   */\n  inset: PropTypes.bool,\n\n  /**\n   * The main content element.\n   */\n  primary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the primary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  primaryTypographyProps: PropTypes.object,\n\n  /**\n   * The secondary content element.\n   */\n  secondary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the secondary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  secondaryTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemText'\n})(ListItemText);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      height: 1,\n      margin: 0,\n      // Reset browser default style.\n      border: 'none',\n      flexShrink: 0,\n      backgroundColor: theme.palette.divider\n    },\n\n    /* Styles applied to the root element if `absolute={true}`. */\n    absolute: {\n      position: 'absolute',\n      bottom: 0,\n      left: 0,\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `variant=\"inset\"`. */\n    inset: {\n      marginLeft: 72\n    },\n\n    /* Styles applied to the root element if `light={true}`. */\n    light: {\n      backgroundColor: fade(theme.palette.divider, 0.08)\n    },\n\n    /* Styles applied to the root element if `variant=\"middle\"`. */\n    middle: {\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2)\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      height: '100%',\n      width: 1\n    },\n\n    /* Styles applied to the root element if `flexItem={true}`. */\n    flexItem: {\n      alignSelf: 'stretch',\n      height: 'auto'\n    }\n  };\n};\nvar Divider = React.forwardRef(function Divider(props, ref) {\n  var _props$absolute = props.absolute,\n      absolute = _props$absolute === void 0 ? false : _props$absolute,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'hr' : _props$component,\n      _props$flexItem = props.flexItem,\n      flexItem = _props$flexItem === void 0 ? false : _props$flexItem,\n      _props$light = props.light,\n      light = _props$light === void 0 ? false : _props$light,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$role = props.role,\n      role = _props$role === void 0 ? Component !== 'hr' ? 'separator' : undefined : _props$role,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'fullWidth' : _props$variant,\n      other = _objectWithoutProperties(props, [\"absolute\", \"classes\", \"className\", \"component\", \"flexItem\", \"light\", \"orientation\", \"role\", \"variant\"]);\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'fullWidth' && classes[variant], absolute && classes.absolute, flexItem && classes.flexItem, light && classes.light, orientation === 'vertical' && classes.vertical),\n    role: role,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Divider.propTypes = {\n  /**\n   * Absolutely position the element.\n   */\n  absolute: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, a vertical divider will have the correct height when used in flex container.\n   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)\n   */\n  flexItem: PropTypes.bool,\n\n  /**\n   * If `true`, the divider will have a lighter color.\n   */\n  light: PropTypes.bool,\n\n  /**\n   * The divider orientation.\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['fullWidth', 'inset', 'middle'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDivider'\n})(Divider);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","import * as React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Person from '../internal/svg-icons/Person';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexShrink: 0,\n      width: 40,\n      height: 40,\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(20),\n      lineHeight: 1,\n      borderRadius: '50%',\n      overflow: 'hidden',\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the root element if not `src` or `srcSet`. */\n    colorDefault: {\n      color: theme.palette.background.default,\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {},\n\n    /* Styles applied to the root element if `variant=\"rounded\"`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"square\"`. */\n    square: {\n      borderRadius: 0\n    },\n\n    /* Styles applied to the img element if either `src` or `srcSet` is defined. */\n    img: {\n      width: '100%',\n      height: '100%',\n      textAlign: 'center',\n      // Handle non-square image. The property isn't supported by IE 11.\n      objectFit: 'cover',\n      // Hide alt text.\n      color: 'transparent',\n      // Hide the image broken icon, only works on Chrome.\n      textIndent: 10000\n    },\n\n    /* Styles applied to the fallback icon */\n    fallback: {\n      width: '75%',\n      height: '75%'\n    }\n  };\n};\n\nfunction useLoaded(_ref) {\n  var src = _ref.src,\n      srcSet = _ref.srcSet;\n\n  var _React$useState = React.useState(false),\n      loaded = _React$useState[0],\n      setLoaded = _React$useState[1];\n\n  React.useEffect(function () {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n\n    setLoaded(false);\n    var active = true;\n    var image = new Image();\n    image.src = src;\n    image.srcSet = srcSet;\n\n    image.onload = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('loaded');\n    };\n\n    image.onerror = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('error');\n    };\n\n    return function () {\n      active = false;\n    };\n  }, [src, srcSet]);\n  return loaded;\n}\n\nvar Avatar = React.forwardRef(function Avatar(props, ref) {\n  var alt = props.alt,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      imgProps = props.imgProps,\n      sizes = props.sizes,\n      src = props.src,\n      srcSet = props.srcSet,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'circle' : _props$variant,\n      other = _objectWithoutProperties(props, [\"alt\", \"children\", \"classes\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"]);\n\n  var children = null; // Use a hook instead of onError on the img element to support server-side rendering.\n\n  var loaded = useLoaded({\n    src: src,\n    srcSet: srcSet\n  });\n  var hasImg = src || srcSet;\n  var hasImgNotFailing = hasImg && loaded !== 'error';\n\n  if (hasImgNotFailing) {\n    children = React.createElement(\"img\", _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = React.createElement(Person, {\n      className: classes.fallback\n    });\n  }\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, classes.system, classes[variant], className, !hasImgNotFailing && classes.colorDefault),\n    ref: ref\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes = {\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Attributes applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n\n  /**\n   * The shape of the avatar.\n   */\n  variant: PropTypes.oneOf(['circle', 'rounded', 'square'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatar'\n})(Avatar);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    minWidth: 56,\n    flexShrink: 0\n  },\n\n  /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n  alignItemsFlexStart: {\n    marginTop: 8\n  }\n};\n/**\n * A simple wrapper to apply `List` styles to an `Avatar`.\n */\n\nvar ListItemAvatar = React.forwardRef(function ListItemAvatar(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemAvatar.propTypes = {\n  /**\n   * The content of the component – normally `Avatar`.\n   */\n  children: PropTypes.element.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemAvatar'\n})(ListItemAvatar);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    margin: 0,\n    padding: '16px 24px',\n    flex: '0 0 auto'\n  }\n};\nvar DialogTitle = React.forwardRef(function DialogTitle(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\"]);\n\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), disableTypography ? children : React.createElement(Typography, {\n    component: \"h2\",\n    variant: \"h6\"\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a typography component.\n   * For instance, this can be useful to render an h4 instead of the default h2.\n   */\n  disableTypography: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogTitle'\n})(DialogTitle);","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { blue } from \"@material-ui/core/colors\";\n\nconst emails = [\"username@gmail.com\", \"user02@gmail.com\"];\nconst useStyles = makeStyles({\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600]\n  }\n});\n\nfunction SimpleDialog(props) {\n  const classes = useStyles();\n  const { onClose, selectedValue, ...other } = props;\n\n  function handleClose() {\n    onClose(selectedValue);\n  }\n\n  function handleListItemClick(value) {\n    onClose(value);\n  }\n\n  return (\n    <Dialog\n      onClose={handleClose}\n      aria-labelledby=\"simple-dialog-title\"\n      {...other}\n    >\n      <DialogTitle id=\"simple-dialog-title\">Set backup account</DialogTitle>\n      <List>\n        {emails.map(email => (\n          <ListItem\n            button\n            onClick={() => handleListItemClick(email)}\n            key={email}\n          >\n            <ListItemAvatar>\n              <Avatar className={classes.avatar}>\n                <PersonIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={email} />\n          </ListItem>\n        ))}\n\n        <ListItem button onClick={() => handleListItemClick(\"addAccount\")}>\n          <ListItemAvatar>\n            <Avatar>\n              <AddIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary=\"add account\" />\n        </ListItem>\n      </List>\n    </Dialog>\n  );\n}\n\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func,\n  open: PropTypes.bool,\n  selectedValue: PropTypes.string\n};\n\nexport default function SimpleDialogDemo() {\n  const [open, setOpen] = React.useState(false);\n  const [selectedValue, setSelectedValue] = React.useState(emails[1]);\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  const handleClose = value => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  return (\n    <div>\n      <Typography variant=\"subtitle1\">Selected: {selectedValue}</Typography>\n      <br />\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open simple dialog\n      </Button>\n      <SimpleDialog\n        selectedValue={selectedValue}\n        open={open}\n        onClose={handleClose}\n      />\n    </div>\n  );\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    marginBottom: 12\n  }\n};\nvar DialogContentText = React.forwardRef(function DialogContentText(props, ref) {\n  return React.createElement(Typography, _extends({\n    component: \"p\",\n    variant: \"body1\",\n    color: \"textSecondary\",\n    ref: ref\n  }, props));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogContentText'\n})(DialogContentText);","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nexport default function AlertDialog() {\n  const [open, setOpen] = React.useState(false);\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open alert dialog\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Use Google's location service?\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Let Google help apps determine location. This means sending\n            anonymous location data to Google, even when no apps are running.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Disagree\n          </Button>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Slide from \"@material-ui/core/Slide\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function AlertDialogSlide() {\n  const [open, setOpen] = React.useState(false);\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Slide in alert dialog\n      </Button>\n      <Dialog\n        open={open}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogTitle id=\"alert-dialog-slide-title\">\n          {\"Use Google's location service?\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            Let Google help apps determine location. This means sending\n            anonymous location data to Google, even when no apps are running.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Disagree\n          </Button>\n          <Button onClick={handleClose} color=\"primary\">\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nexport default function FormDialog() {\n  const [open, setOpen] = React.useState(false);\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open form dialog\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            To subscribe to this website, please enter your email address here.\n            We will send updates occasionally.\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Email Address\"\n            type=\"email\"\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button variant=\"outlined\" color=\"secondary\" onClick={handleClose}>\n            Cancel\n          </Button>\n          <Button onClick={handleClose} color=\"primary\">\n            Subscribe\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\"\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2)\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500]\n  }\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton\n          aria-label=\"Close\"\n          className={classes.closeButton}\n          onClick={onClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2)\n  }\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1)\n  }\n}))(MuiDialogActions);\n\nclass CustomizedDialogs extends React.Component {\n  state = {\n    open: false\n  };\n\n  handleClickOpen = () => {\n    this.setState({\n      open: true\n    });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    return (\n      <div>\n        <Button\n          variant=\"outlined\"\n          color=\"secondary\"\n          onClick={this.handleClickOpen}\n        >\n          Open dialog\n        </Button>\n        <Dialog\n          onClose={this.handleClose}\n          aria-labelledby=\"customized-dialog-title\"\n          open={this.state.open}\n        >\n          <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>\n            Modal title\n          </DialogTitle>\n          <DialogContent dividers>\n            <Typography gutterBottom>\n              Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\n              dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta\n              ac consectetur ac, vestibulum at eros.\n            </Typography>\n            <Typography gutterBottom>\n              Praesent commodo cursus magna, vel scelerisque nisl consectetur\n              et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor\n              auctor.\n            </Typography>\n            <Typography gutterBottom>\n              Aenean lacinia bibendum nulla sed consectetur. Praesent commodo\n              cursus magna, vel scelerisque nisl consectetur et. Donec sed odio\n              dui. Donec ullamcorper nulla non metus auctor fringilla.\n            </Typography>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} color=\"primary\">\n              Save changes\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nexport default CustomizedDialogs;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Slide from \"@material-ui/core/Slide\";\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: \"relative\"\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1\n  }\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function FullScreenDialog() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open full-screen dialog\n      </Button>\n      <Dialog\n        fullScreen\n        open={open}\n        onClose={handleClose}\n        TransitionComponent={Transition}\n      >\n        <AppBar className={classes.appBar}>\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              onClick={handleClose}\n              aria-label=\"Close\"\n            >\n              <CloseIcon />\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n              Sound\n            </Typography>\n            <Button color=\"inherit\" onClick={handleClose}>\n              save\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <List>\n          <ListItem button>\n            <ListItemText primary=\"Phone ringtone\" secondary=\"Titania\" />\n          </ListItem>\n          <Divider />\n          <ListItem button>\n            <ListItemText\n              primary=\"Default notification ringtone\"\n              secondary=\"Tethys\"\n            />\n          </ListItem>\n        </List>\n      </Dialog>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport Switch from \"@material-ui/core/Switch\";\n\nconst useStyles = makeStyles(theme => ({\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    margin: \"auto\",\n    width: \"fit-content\"\n  },\n  formControl: {\n    marginTop: theme.spacing(2),\n    minWidth: 120\n  },\n  formControlLabel: {\n    marginTop: theme.spacing(1)\n  }\n}));\n\nexport default function MaxWidthDialog() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState(\"sm\");\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  function handleMaxWidthChange(event) {\n    setMaxWidth(event.target.value);\n  }\n\n  function handleFullWidthChange(event) {\n    setFullWidth(event.target.checked);\n  }\n\n  return (\n    <React.Fragment>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open max-width dialog\n      </Button>\n      <Dialog\n        fullWidth={fullWidth}\n        maxWidth={maxWidth}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"max-width-dialog-title\"\n      >\n        <DialogTitle id=\"max-width-dialog-title\">Optional sizes</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            You can set my maximum width and whether to adapt or not.\n          </DialogContentText>\n          <form className={classes.form} noValidate>\n            <FormControl className={classes.formControl}>\n              <InputLabel htmlFor=\"max-width\">maxWidth</InputLabel>\n              <Select\n                value={maxWidth}\n                onChange={handleMaxWidthChange}\n                inputProps={{\n                  name: \"max-width\",\n                  id: \"max-width\"\n                }}\n              >\n                <MenuItem value={false}>false</MenuItem>\n                <MenuItem value=\"xs\">xs</MenuItem>\n                <MenuItem value=\"sm\">sm</MenuItem>\n                <MenuItem value=\"md\">md</MenuItem>\n                <MenuItem value=\"lg\">lg</MenuItem>\n                <MenuItem value=\"xl\">xl</MenuItem>\n              </Select>\n            </FormControl>\n            <FormControlLabel\n              className={classes.formControlLabel}\n              control={\n                <Switch\n                  checked={fullWidth}\n                  onChange={handleFullWidthChange}\n                  value=\"fullWidth\"\n                />\n              }\n              label=\"Full width\"\n            />\n          </form>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nexport default function ResponsiveDialog() {\n  const [open, setOpen] = React.useState(false);\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open responsive dialog\n      </Button>\n      <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">\n          {\"Use Google's location service?\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Let Google help apps determine location. This means sending\n            anonymous location data to Google, even when no apps are running.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Disagree\n          </Button>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Radio from \"@material-ui/core/Radio\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\n\nconst options = [\n  \"None\",\n  \"Atria\",\n  \"Callisto\",\n  \"Dione\",\n  \"Ganymede\",\n  \"Hangouts Call\",\n  \"Luna\",\n  \"Oberon\",\n  \"Phobos\",\n  \"Pyxis\",\n  \"Sedna\",\n  \"Titania\",\n  \"Triton\",\n  \"Umbriel\"\n];\n\nfunction ConfirmationDialogRaw(props) {\n  const { onClose, value: valueProp, open, ...other } = props;\n  const [value, setValue] = React.useState(valueProp);\n  const radioGroupRef = React.useRef(null);\n\n  React.useEffect(() => {\n    if (!open) {\n      setValue(valueProp);\n    }\n  }, [valueProp, open]);\n\n  function handleEntering() {\n    if (radioGroupRef.current != null) {\n      radioGroupRef.current.focus();\n    }\n  }\n\n  function handleCancel() {\n    onClose();\n  }\n\n  function handleOk() {\n    onClose(value);\n  }\n\n  function handleChange(event, newValue) {\n    setValue(newValue);\n  }\n\n  return (\n    <Dialog\n      disableBackdropClick\n      disableEscapeKeyDown\n      maxWidth=\"xs\"\n      onEntering={handleEntering}\n      aria-labelledby=\"confirmation-dialog-title\"\n      open={open}\n      {...other}\n    >\n      <DialogTitle id=\"confirmation-dialog-title\">Phone Ringtone</DialogTitle>\n      <DialogContent dividers>\n        <RadioGroup\n          ref={radioGroupRef}\n          aria-label=\"Ringtone\"\n          name=\"ringtone\"\n          value={value}\n          onChange={handleChange}\n        >\n          {options.map(option => (\n            <FormControlLabel\n              value={option}\n              key={option}\n              control={<Radio />}\n              label={option}\n            />\n          ))}\n        </RadioGroup>\n      </DialogContent>\n      <DialogActions>\n        <Button variant=\"outlined\" color=\"secondary\" onClick={handleCancel}>\n          Cancel\n        </Button>\n        <Button onClick={handleOk} color=\"primary\">\n          Ok\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nConfirmationDialogRaw.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  },\n  paper: {\n    width: \"80%\",\n    maxHeight: 435\n  }\n}));\n\nexport default function ConfirmationDialog() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [value, setValue] = React.useState(\"Dione\");\n\n  function handleClickListItem() {\n    setOpen(true);\n  }\n\n  function handleClose(newValue) {\n    setOpen(false);\n\n    if (newValue) {\n      setValue(newValue);\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <List component=\"div\" role=\"list\">\n        <ListItem button divider disabled role=\"listitem\">\n          <ListItemText primary=\"Interruptions\" />\n        </ListItem>\n        <ListItem\n          button\n          divider\n          aria-haspopup=\"true\"\n          aria-controls=\"ringtone-menu\"\n          aria-label=\"Phone ringtone\"\n          onClick={handleClickListItem}\n          role=\"listitem\"\n        >\n          <ListItemText primary=\"Phone ringtone\" secondary={value} />\n        </ListItem>\n        <ListItem button divider disabled role=\"listitem\">\n          <ListItemText\n            primary=\"Default notification ringtone\"\n            secondary=\"Tethys\"\n          />\n        </ListItem>\n        <ConfirmationDialogRaw\n          classes={{\n            paper: classes.paper\n          }}\n          id=\"ringtone-menu\"\n          keepMounted\n          open={open}\n          onClose={handleClose}\n          value={value}\n        />\n      </List>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Breadcrumb, SimpleCard } from \"matx\";\nimport SimpleDialogDemo from \"./SimpleDialog\";\nimport AlertDialog from \"./SimpleAlerts\";\nimport AlertDialogSlide from \"./DialogTransition\";\nimport FormDialog from \"./FormDialog\";\nimport CustomizedDialogs from \"./CustomizedDialog\";\nimport FullScreenDialog from \"./FullScreenDialog\";\nimport MaxWidthDialog from \"./OptimalSizeDialog\";\nimport ResponsiveDialog from \"./ResponsiveDialog\";\nimport ConfirmationDialog from \"./ConfirmationDialog\";\n\nconst AppDialog = () => {\n  return (\n    <div className=\"m-sm-30\">\n      <div className=\"mb-sm-30\">\n        <Breadcrumb\n          routeSegments={[\n            { name: \"Material\", path: \"/material\" },\n            { name: \"Dialog\" }\n          ]}\n        />\n      </div>\n      <SimpleCard title=\"simple Dialog\">\n        <SimpleDialogDemo />\n      </SimpleCard>\n      <div className=\"py-3\" />\n      <SimpleCard title=\"alert dialog\">\n        <AlertDialog />\n      </SimpleCard>\n      <div className=\"py-3\" />\n      <SimpleCard title=\"transition\">\n        <AlertDialogSlide />\n      </SimpleCard>\n      <div className=\"py-3\" />\n      <SimpleCard title=\"form dialog\">\n        <FormDialog />\n      </SimpleCard>\n      <div className=\"py-3\" />\n      <SimpleCard title=\"customized dialog\">\n        <CustomizedDialogs />\n      </SimpleCard>\n      <div className=\"py-3\" />\n      <SimpleCard title=\"full-screen dialog\">\n        <FullScreenDialog />\n      </SimpleCard>\n      <div className=\"py-3\" />\n      <SimpleCard title=\"optimized size dialog\">\n        <MaxWidthDialog />\n      </SimpleCard>\n      <div className=\"py-3\" />\n      <SimpleCard title=\"responsive dialog\">\n        <ResponsiveDialog />\n      </SimpleCard>\n      <div className=\"py-3\" />\n      <SimpleCard title=\"confirmation dialog\">\n        <ConfirmationDialog />\n      </SimpleCard>\n    </div>\n  );\n};\n\nexport default AppDialog;\n"],"sourceRoot":""}