{"version":3,"sources":["app/views/material-kit/snackbar/SimpleSnackbar.jsx","app/views/material-kit/snackbar/CustomizedSnackbar.jsx","app/views/material-kit/snackbar/PositionedSnackbar.jsx","app/views/material-kit/snackbar/LongLengthSnackbar.jsx","app/views/material-kit/snackbar/ConsecutiveSnackbar.jsx","app/views/material-kit/snackbar/DirectionSnackbar.jsx","app/views/material-kit/snackbar/StackedSnackbar.jsx","app/views/material-kit/snackbar/TransitionSnackbar.jsx","app/views/material-kit/snackbar/AppSnackbar.jsx"],"names":["useStyles","makeStyles","theme","close","padding","spacing","SimpleSnackbar","classes","React","useState","open","setOpen","handleClose","event","reason","Button","onClick","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","ContentProps","message","id","action","key","color","size","IconButton","aria-label","className","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","useStyles1","backgroundColor","green","palette","dark","primary","main","amber","icon","fontSize","iconVariant","opacity","marginRight","display","alignItems","MySnackbarContentWrapper","props","variant","other","Icon","SnackbarContent","clsx","aria-describedby","useStyles2","margin","CustomizedSnackbars","PositionedSnackbar","state","setState","handleClick","newState","root","maxWidth","snackbar","LongTextSnackbar","ConsecutiveSnackbars","queue","push","Date","getTime","processQueue","length","messageInfo","shift","handleExited","this","onExited","Component","withStyles","TransitionLeft","Slide","direction","TransitionUp","TransitionRight","TransitionDown","DirectionSnackbar","Transition","TransitionComponent","StackedSnackbar","enqueueSnackbar","useSnackbar","Fragment","IntegrationNotistack","maxSnack","SlideTransition","GrowTransition","Grow","TransitionsSnackbar","Fade","AppSnackbar","routeSegments","name","path","title","ConsecutiveSnackbar"],"mappings":"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","file":"static/js/34.a86fafcc.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst useStyles = makeStyles(theme => ({\n  close: {\n    padding: theme.spacing(0.5)\n  }\n}));\n\nexport default function SimpleSnackbar() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  function handleClick() {\n    setOpen(true);\n  }\n\n  function handleClose(event, reason) {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen(false);\n  }\n\n  return (\n    <div>\n      <Button onClick={handleClick}>Open simple snackbar</Button>\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\"\n        }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n        ContentProps={{\n          \"aria-describedby\": \"message-id\"\n        }}\n        message={<span id=\"message-id\">Note archived</span>}\n        action={[\n          <Button\n            key=\"undo\"\n            color=\"secondary\"\n            size=\"small\"\n            onClick={handleClose}\n          >\n            UNDO\n          </Button>,\n          <IconButton\n            key=\"close\"\n            aria-label=\"Close\"\n            color=\"inherit\"\n            className={classes.close}\n            onClick={handleClose}\n          >\n            <CloseIcon />\n          </IconButton>\n        ]}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport Button from \"@material-ui/core/Button\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { amber, green } from \"@material-ui/core/colors\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon\n};\n\nconst useStyles1 = makeStyles(theme => ({\n  success: {\n    backgroundColor: green[600]\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark\n  },\n  info: {\n    backgroundColor: theme.palette.primary.main\n  },\n  warning: {\n    backgroundColor: amber[700]\n  },\n  icon: {\n    fontSize: 20\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1)\n  },\n  message: {\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n}));\n\nfunction MySnackbarContentWrapper(props) {\n  const classes = useStyles1();\n  const { className, message, onClose, variant, ...other } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={clsx(classes[variant], className)}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"Close\"\n          color=\"inherit\"\n          onClick={onClose}\n        >\n          <CloseIcon className={classes.icon} />\n        </IconButton>\n      ]}\n      {...other}\n    />\n  );\n}\n\nMySnackbarContentWrapper.propTypes = {\n  className: PropTypes.string,\n  message: PropTypes.node,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf([\"success\", \"warning\", \"error\", \"info\"]).isRequired\n};\n\nconst useStyles2 = makeStyles(theme => ({\n  margin: {\n    margin: theme.spacing(1)\n  }\n}));\n\nexport default function CustomizedSnackbars() {\n  const classes = useStyles2();\n  const [open, setOpen] = React.useState(false);\n\n  function handleClick() {\n    setOpen(true);\n  }\n\n  function handleClose(event, reason) {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpen(false);\n  }\n\n  return (\n    <div>\n      <Button\n        variant=\"outlined\"\n        className={classes.margin}\n        onClick={handleClick}\n      >\n        Open success snackbar\n      </Button>\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\"\n        }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n      >\n        <MySnackbarContentWrapper\n          onClose={handleClose}\n          variant=\"success\"\n          message=\"This is a success message!\"\n        />\n      </Snackbar>\n      <MySnackbarContentWrapper\n        variant=\"error\"\n        className={classes.margin}\n        message=\"This is an error message!\"\n      />\n      <MySnackbarContentWrapper\n        variant=\"warning\"\n        className={classes.margin}\n        message=\"This is a warning message!\"\n      />\n      <MySnackbarContentWrapper\n        variant=\"info\"\n        className={classes.margin}\n        message=\"This is an information message!\"\n      />\n      <MySnackbarContentWrapper\n        variant=\"success\"\n        className={classes.margin}\n        message=\"This is a success message!\"\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\n\nexport default function PositionedSnackbar() {\n  const [state, setState] = React.useState({\n    open: false,\n    vertical: \"top\",\n    horizontal: \"center\"\n  });\n\n  const { vertical, horizontal, open } = state;\n\n  const handleClick = newState => () => {\n    setState({ open: true, ...newState });\n  };\n\n  function handleClose() {\n    setState({ ...state, open: false });\n  }\n\n  return (\n    <div>\n      <Button onClick={handleClick({ vertical: \"top\", horizontal: \"center\" })}>\n        Top-Center\n      </Button>\n      <Button onClick={handleClick({ vertical: \"top\", horizontal: \"right\" })}>\n        Top-Right\n      </Button>\n      <Button\n        onClick={handleClick({ vertical: \"bottom\", horizontal: \"right\" })}\n      >\n        Bottom-Right\n      </Button>\n      <Button\n        onClick={handleClick({ vertical: \"bottom\", horizontal: \"center\" })}\n      >\n        Bottom-Center\n      </Button>\n      <Button onClick={handleClick({ vertical: \"bottom\", horizontal: \"left\" })}>\n        Bottom-Left\n      </Button>\n      <Button onClick={handleClick({ vertical: \"top\", horizontal: \"left\" })}>\n        Top-Left\n      </Button>\n      <Snackbar\n        anchorOrigin={{ vertical, horizontal }}\n        key={`${vertical},${horizontal}`}\n        open={open}\n        onClose={handleClose}\n        ContentProps={{\n          \"aria-describedby\": \"message-id\"\n        }}\n        message={<span id=\"message-id\">I love snacks</span>}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\n\nconst action = (\n  <Button color=\"secondary\" size=\"small\">\n    lorem ipsum dolorem\n  </Button>\n);\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: 600\n  },\n  snackbar: {\n    margin: theme.spacing(1)\n  }\n}));\n\nexport default function LongTextSnackbar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <SnackbarContent\n        className={classes.snackbar}\n        message=\"I love snacks.\"\n        action={action}\n      />\n      <SnackbarContent\n        className={classes.snackbar}\n        message={`I love candy. I love cookies. I love cupcakes. \\\n          I love cheesecake. I love chocolate.`}\n      />\n      <SnackbarContent\n        className={classes.snackbar}\n        message=\"I love candy. I love cookies. I love cupcakes.\"\n        action={action}\n      />\n      <SnackbarContent\n        className={classes.snackbar}\n        message={\n          \"I love candy. I love cookies. I love cupcakes. \\\n          I love cheesecake. I love chocolate.\"\n        }\n        action={action}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\"\nimport Button from \"@material-ui/core/Button\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst styles = theme => ({\n  close: {\n    padding: theme.spacing(0.5)\n  }\n});\n\nclass ConsecutiveSnackbars extends React.Component {\n  queue = [];\n\n  state = {\n    open: false\n  };\n\n  handleClick = message => () => {\n    this.queue.push({\n      message,\n      key: new Date().getTime()\n    });\n\n    if (this.state.open) {\n      // immediately begin dismissing current message\n      // to start showing new one\n      this.setState({ open: false });\n    } else {\n      this.processQueue();\n    }\n  };\n\n  processQueue = () => {\n    if (this.queue.length > 0) {\n      this.setState({\n        messageInfo: this.queue.shift(),\n        open: true\n      });\n    }\n  };\n\n  handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    this.setState({ open: false });\n  };\n\n  handleExited = () => {\n    this.processQueue();\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { messageInfo = {} } = this.state;\n\n    return (\n      <div>\n        <Button onClick={this.handleClick(\"Message A\")}>Show message A</Button>\n        <Button onClick={this.handleClick(\"Message B\")}>Show message B</Button>\n        <Snackbar\n          key={messageInfo.key}\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"left\"\n          }}\n          open={this.state.open}\n          autoHideDuration={6000}\n          onClose={this.handleClose}\n          onExited={this.handleExited}\n          ContentProps={{\n            \"aria-describedby\": \"message-id\"\n          }}\n          message={<span id=\"message-id\">{messageInfo.message}</span>}\n          action={[\n            <Button\n              key=\"undo\"\n              color=\"secondary\"\n              size=\"small\"\n              onClick={this.handleClose}\n            >\n              UNDO\n            </Button>,\n            <IconButton\n              key=\"close\"\n              aria-label=\"Close\"\n              color=\"inherit\"\n              className={classes.close}\n              onClick={this.handleClose}\n            >\n              <CloseIcon />\n            </IconButton>\n          ]}\n        />\n      </div>\n    );\n  }\n}\n\nConsecutiveSnackbars.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(ConsecutiveSnackbars);\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Slide from \"@material-ui/core/Slide\";\n\nfunction TransitionLeft(props) {\n  return <Slide {...props} direction=\"left\" />;\n}\n\nfunction TransitionUp(props) {\n  return <Slide {...props} direction=\"up\" />;\n}\n\nfunction TransitionRight(props) {\n  return <Slide {...props} direction=\"right\" />;\n}\n\nfunction TransitionDown(props) {\n  return <Slide {...props} direction=\"down\" />;\n}\n\nclass DirectionSnackbar extends React.Component {\n  state = {\n    open: false\n  };\n\n  handleClick = Transition => () => {\n    this.setState({ open: true, Transition });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    return (\n      <div>\n        <Button onClick={this.handleClick(TransitionLeft)}>Right</Button>\n        <Button onClick={this.handleClick(TransitionUp)}>Up</Button>\n        <Button onClick={this.handleClick(TransitionRight)}>Left</Button>\n        <Button onClick={this.handleClick(TransitionDown)}>Down</Button>\n        <Snackbar\n          open={this.state.open}\n          onClose={this.handleClose}\n          TransitionComponent={this.state.Transition}\n          ContentProps={{\n            \"aria-describedby\": \"message-id\"\n          }}\n          message={<span id=\"message-id\">I love snacks</span>}\n        />\n      </div>\n    );\n  }\n}\n\nexport default DirectionSnackbar;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { SnackbarProvider, useSnackbar } from \"notistack\";\n\nfunction StackedSnackbar() {\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleClick = () => {\n    enqueueSnackbar(\"I love snacks.\");\n  };\n\n  const handleClickVariant = variant => () => {\n    // variant could be success, error, warning, info, or default\n    enqueueSnackbar(\"This is a warning message!\", { variant });\n  };\n\n  return (\n    <React.Fragment>\n      <Button onClick={handleClick}>Show snackbar</Button>\n      <Button onClick={handleClickVariant(\"warning\")}>\n        Show warning snackbar\n      </Button>\n    </React.Fragment>\n  );\n}\n\nexport default function IntegrationNotistack() {\n  return (\n    <SnackbarProvider maxSnack={3}>\n      <StackedSnackbar />\n    </SnackbarProvider>\n  );\n}\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Fade from \"@material-ui/core/Fade\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Grow from \"@material-ui/core/Grow\";\n\nfunction SlideTransition(props) {\n  return <Slide {...props} direction=\"up\" />;\n}\n\nfunction GrowTransition(props) {\n  return <Grow {...props} />;\n}\n\nexport default function TransitionsSnackbar() {\n  const [state, setState] = React.useState({\n    open: false,\n    Transition: Fade\n  });\n\n  const handleClick = Transition => () => {\n    setState({\n      open: true,\n      Transition\n    });\n  };\n\n  function handleClose() {\n    setState({\n      ...state,\n      open: false\n    });\n  }\n\n  return (\n    <div>\n      <Button onClick={handleClick(GrowTransition)}>Grow Transition</Button>\n      <Button onClick={handleClick(Fade)}>Fade Transition</Button>\n      <Button onClick={handleClick(SlideTransition)}>Slide Transition</Button>\n      <Snackbar\n        open={state.open}\n        onClose={handleClose}\n        TransitionComponent={state.Transition}\n        ContentProps={{\n          \"aria-describedby\": \"message-id\"\n        }}\n        message={<span id=\"message-id\">I love snacks</span>}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Breadcrumb, SimpleCard } from \"matx\";\nimport SimpleSnackbar from \"./SimpleSnackbar\";\nimport CustomizedSnackbars from \"./CustomizedSnackbar\";\nimport PositionedSnackbar from \"./PositionedSnackbar\";\nimport LongTextSnackbar from \"./LongLengthSnackbar\";\nimport ConsecutiveSnackbar from \"./ConsecutiveSnackbar\";\nimport DirectionSnackbar from \"./DirectionSnackbar\";\nimport IntegrationNotistack from \"./StackedSnackbar\";\nimport TransitionsSnackbar from \"./TransitionSnackbar\";\n\nconst AppSnackbar = () => {\n  return (\n    <div className=\"m-sm-30\">\n      <div className=\"mb-sm-30\">\n        <Breadcrumb\n          routeSegments={[\n            { name: \"Material\", path: \"/material\" },\n            { name: \"Snackbar\" }\n          ]}\n        />\n      </div>\n      <SimpleCard title=\"simple snackbar\">\n        <SimpleSnackbar />\n      </SimpleCard>\n      <div className=\"py-3\" />\n      <SimpleCard title=\"customized snackbar\">\n        <CustomizedSnackbars />\n      </SimpleCard>\n      <div className=\"py-3\" />\n      <SimpleCard title=\"positioned snackbar\">\n        <PositionedSnackbar />\n      </SimpleCard>\n      <div className=\"py-3\" />\n      <SimpleCard title=\"message length\">\n        <LongTextSnackbar />\n      </SimpleCard>\n      <div className=\"py-3\" />\n      <SimpleCard title=\"transition\">\n        <TransitionsSnackbar />\n      </SimpleCard>\n      <div className=\"py-3\" />\n      <SimpleCard title=\"consecutive snackbar\">\n        <ConsecutiveSnackbar />\n      </SimpleCard>\n      <div className=\"py-3\" />\n      <SimpleCard title=\"Control Slide direction\">\n        <DirectionSnackbar />\n      </SimpleCard>\n      <div className=\"py-3\" />\n      <SimpleCard title=\"complementary project\">\n        <IntegrationNotistack />\n      </SimpleCard>\n    </div>\n  );\n};\n\nexport default AppSnackbar;\n"],"sourceRoot":""}