{"version":3,"sources":["app/views/material-kit/AppProgress.jsx"],"names":["useStyles","makeStyles","theme","root","flexGrow","progress","margin","spacing","AppProgress","classes","React","useState","completed","setCompleted","useEffect","timer","setInterval","oldCompleted","diff","Math","random","min","clearInterval","className","routeSegments","name","path","title","color","variant","value"],"mappings":"4KAKMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,SAAU,GAEZC,SAAU,CACRC,OAAQJ,EAAMK,QAAQ,QA8EXC,UA1EK,WAClB,IAAMC,EAAUT,IADQ,EAEUU,IAAMC,SAAS,GAFzB,mBAEjBC,EAFiB,KAENC,EAFM,KAqBxB,OAjBAH,IAAMI,WAAU,WAWd,IAAMC,EAAQC,aAVd,WACEH,GAAa,SAAAI,GACX,GAAqB,MAAjBA,EACF,OAAO,EAET,IAAMC,EAAuB,GAAhBC,KAAKC,SAClB,OAAOD,KAAKE,IAAIJ,EAAeC,EAAM,UAIL,KACpC,OAAO,WACLI,cAAcP,MAEf,IAGD,yBAAKQ,UAAU,WACb,yBAAKA,UAAU,YACb,kBAAC,IAAD,CACEC,cAAe,CACb,CAAEC,KAAM,WAAYC,KAAM,aAC1B,CAAED,KAAM,eAId,kBAAC,IAAD,CAAYE,MAAM,oCAChB,kBAAC,IAAD,CAAkBJ,UAAWd,EAAQJ,WACrC,kBAAC,IAAD,CAAkBkB,UAAWd,EAAQJ,SAAUuB,MAAM,eAEvD,yBAAKL,UAAU,SACf,kBAAC,IAAD,CAAYI,MAAM,6BAChB,kBAAC,IAAD,CACEE,QAAQ,SACRC,MAAO,GACPP,UAAWd,EAAQJ,WAErB,kBAAC,IAAD,CACEwB,QAAQ,SACRC,MAAO,GACPP,UAAWd,EAAQJ,SACnBuB,MAAM,cAER,kBAAC,IAAD,CACEC,QAAQ,SACRC,MAAO,GACPP,UAAWd,EAAQJ,SACnBuB,MAAM,eAGV,yBAAKL,UAAU,SACf,kBAAC,IAAD,CAAYI,MAAM,mCAChB,kBAAC,IAAD,MACA,6BACA,kBAAC,IAAD,CAAgBC,MAAM,eAExB,yBAAKL,UAAU,SACf,kBAAC,IAAD,CAAYI,MAAM,iCAChB,kBAAC,IAAD,CAAgBE,QAAQ,cAAcC,MAAOlB,IAC7C,6BACA,kBAAC,IAAD,CACEgB,MAAM,YACNC,QAAQ,cACRC,MAAOlB","file":"static/js/30.3de1d88a.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { LinearProgress, CircularProgress } from \"@material-ui/core\";\nimport { Breadcrumb, SimpleCard } from \"matx\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  progress: {\n    margin: theme.spacing(2)\n  }\n}));\n\nconst AppProgress = () => {\n  const classes = useStyles();\n  const [completed, setCompleted] = React.useState(0);\n\n  React.useEffect(() => {\n    function progress() {\n      setCompleted(oldCompleted => {\n        if (oldCompleted === 100) {\n          return 0;\n        }\n        const diff = Math.random() * 10;\n        return Math.min(oldCompleted + diff, 100);\n      });\n    }\n\n    const timer = setInterval(progress, 500);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  return (\n    <div className=\"m-sm-30\">\n      <div className=\"mb-sm-30\">\n        <Breadcrumb\n          routeSegments={[\n            { name: \"Material\", path: \"/material\" },\n            { name: \"Prgress\" }\n          ]}\n        />\n      </div>\n      <SimpleCard title=\"Circuar Progress (Indeterminate)\">\n        <CircularProgress className={classes.progress} />\n        <CircularProgress className={classes.progress} color=\"secondary\" />\n      </SimpleCard>\n      <div className=\"py-3\" />\n      <SimpleCard title=\"Circuar Progress (static)\">\n        <CircularProgress\n          variant=\"static\"\n          value={25}\n          className={classes.progress}\n        />\n        <CircularProgress\n          variant=\"static\"\n          value={50}\n          className={classes.progress}\n          color=\"secondary\"\n        />\n        <CircularProgress\n          variant=\"static\"\n          value={75}\n          className={classes.progress}\n          color=\"secondary\"\n        />\n      </SimpleCard>\n      <div className=\"py-3\" />\n      <SimpleCard title=\"Linear Progress (Indeterminate)\">\n        <LinearProgress />\n        <br />\n        <LinearProgress color=\"secondary\" />\n      </SimpleCard>\n      <div className=\"py-3\" />\n      <SimpleCard title=\"Linear Progress (Determinate)\">\n        <LinearProgress variant=\"determinate\" value={completed} />\n        <br />\n        <LinearProgress\n          color=\"secondary\"\n          variant=\"determinate\"\n          value={completed}\n        />\n      </SimpleCard>\n    </div>\n  );\n};\nexport default AppProgress;\n"],"sourceRoot":""}