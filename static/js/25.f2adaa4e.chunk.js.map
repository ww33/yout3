{"version":3,"sources":["app/MatxLayout/SharedCompoents/NotificationBar.jsx","app/MatxLayout/SharedCompoents/ShoppingCart.jsx","app/MatxLayout/Layout1/Layout1Topbar.jsx","app/MatxLayout/SharedCompoents/Sidenav.jsx","app/MatxLayout/SharedCompoents/Brand.jsx","app/MatxLayout/MatxTheme/SidenavTheme/SidenavThemeStyles.jsx","app/MatxLayout/MatxTheme/SidenavTheme/SidenavTheme.jsx","app/MatxLayout/Layout1/Layout1Sidenav.jsx","app/MatxLayout/SharedCompoents/Footer.jsx","app/MatxLayout/SharedCompoents/SecondarySidebar/SecondarySidebarToggle.jsx","app/MatxLayout/SharedCompoents/MatxCustomizer/BadgeSelected.jsx","app/MatxLayout/SharedCompoents/MatxCustomizer/customizerOptions.js","app/MatxLayout/SharedCompoents/MatxCustomizer/Layout1Customizer.jsx","app/MatxLayout/SharedCompoents/MatxCustomizer/Layout2Customizer.jsx","app/MatxLayout/SharedCompoents/MatxCustomizer/MatxCustomizer.jsx","app/MatxLayout/SharedCompoents/SecondarySidebar/SecondarySidebarContent.jsx","app/MatxLayout/MatxTheme/SecondarySidenavTheme/SecondarySidenavTheme.jsx","app/MatxLayout/SharedCompoents/SecondarySidebar/SecondarySidebar.jsx","app/MatxLayout/Layout1/Layout1.jsx"],"names":["withStyles","withTheme","connect","state","getNotification","PropTypes","func","isRequired","deleteNotification","deleteAllNotification","notification","settings","layout","props","container","theme","notifcationList","React","useState","panelOpen","setPanelOpen","handleDrawerToggle","parentThemePalette","palette","ThemeProvider","themes","activeTheme","IconButton","onClick","style","color","type","text","secondary","primary","Badge","badgeContent","Icon","Drawer","width","variant","anchor","open","onClose","ModalProps","keepMounted","className","map","key","id","size","fontSize","to","path","Card","elevation","icon","name","heading","getTimeDifference","Date","timestamp","title","subtitle","Button","cartListLoaded","getCartList","deleteProductFromCart","updateCartAmount","cartList","ecommerce","user","userId","length","product","amount","disabled","src","imgUrl","alt","price","Layout1Topbar","updateSidebarMode","sidebarSettings","setLayoutSettings","layout1Settings","leftSidebar","handleSidebarToggle","mode","isMdScreen","handleSignOut","logoutUser","this","classes","fixed","topbar","classList","menuButton","MenuItem","menuItem","Component","backgroundColor","main","height","boxShadow","shadows","display","alignItems","minWidth","withRouter","options","suppressScrollX","children","navigation","navigations","activeLayoutSettingsName","activeLayout","activeLayoutSettings","Brand","root","background","default","opacity","SidenavTheme","IconButtonWhite","padding","IconSmall","Layout1Sidenav","hidden","setDefaultSettings","updatedSettings","merge","handleSidenavToggle","console","log","renderLogoSwitch","Switch","onChange","checked","renderUser","photoURL","displayName","Tooltip","aria-label","unlistenRouteChange","history","listen","location","action","setTimeout","setState","sidenavTheme","backgroundImage","bgImgURL","footerTheme","footer","AppBar","position","Toolbar","href","toggle","right","bottom","zIndex","transition","isMobile","useMediaQuery","secondarySidebar","useEffect","Fab","BadgeSelected","badge","top","borderRadius","mainThemes","mainSidebarThemes","topbarThemes","sidebarBG","Layout1Customizer","handleChange","handleControlChange","i","placement","themeColors","FormControl","component","FormLabel","RadioGroup","value","FormControlLabel","control","Radio","label","Grid","spacing","bg","item","lg","invisible","Paper","FormGroup","get","Layout2Customizer","Object","keys","layout2Settings","navbar","setOpen","updateSettings","newSettings","set","event","controlValue","target","tooglePanel","thumbnail","isPro","bgOpacity","SecondarySidebarContent","flexDirection","justifyContent","marginRight","SecondarySidenavTheme","secondarySidebarTheme","routes","useContext","AppContext","topbarTheme","layoutClasses","show","perfectScrollbar","renderRoutes"],"mappings":"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","file":"static/js/25.f2adaa4e.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Icon,\n  Badge,\n  Card,\n  Button,\n  IconButton,\n  Drawer\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport { withStyles, ThemeProvider } from \"@material-ui/core/styles\";\nimport { getTimeDifference } from \"utils.js\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n  getNotification,\n  deleteAllNotification,\n  deleteNotification\n} from \"../../redux/actions/NotificationActions\";\n\nconst NotificationBar = props => {\n  const {\n    container,\n    theme,\n    settings,\n    notification: notifcationList = [],\n    getNotification,\n    deleteAllNotification,\n    deleteNotification\n  } = props;\n\n  const [panelOpen, setPanelOpen] = React.useState(false);\n\n  function handleDrawerToggle() {\n    if (!panelOpen) {\n      getNotification();\n    }\n    setPanelOpen(!panelOpen);\n  }\n  const parentThemePalette = theme.palette;\n\n  return (\n    <ThemeProvider theme={settings.themes[settings.activeTheme]}>\n      <IconButton\n        onClick={handleDrawerToggle}\n        style={{\n          color:\n            parentThemePalette.type === \"light\"\n              ? parentThemePalette.text.secondary\n              : parentThemePalette.text.primary\n        }}\n      >\n        <Badge color=\"secondary\" badgeContent={5}>\n          <Icon>notifications</Icon>\n        </Badge>\n      </IconButton>\n\n      <Drawer\n        width={\"100px\"}\n        container={container}\n        variant=\"temporary\"\n        anchor={\"right\"}\n        open={panelOpen}\n        onClose={handleDrawerToggle}\n        ModalProps={{\n          keepMounted: true\n        }}\n      >\n        <div className=\"notification\">\n          <div className=\"notification__topbar flex items-center p-4 mb-4\">\n            <Icon color=\"primary\">notifications</Icon>\n            <h5 className=\"ml-2 my-0 font-medium\">Notifications</h5>\n          </div>\n\n          {notifcationList.map(notification => (\n            <div\n              key={notification.id}\n              className=\"notification__card position-relative\"\n            >\n              <IconButton\n                size=\"small\"\n                className=\"delete-button bg-light-gray mr-6\"\n                onClick={() => deleteNotification(notification.id)}\n              >\n                <Icon className=\"text-muted\" fontSize=\"small\">\n                  clear\n                </Icon>\n              </IconButton>\n              <Link to={`/${notification.path}`} onClick={handleDrawerToggle}>\n                <Card className=\"mx-4 mb-6\" elevation={3}>\n                  <div className=\"card__topbar flex items-center justify-between p-2 bg-light-gray\">\n                    <div className=\"flex items-center\">\n                      <div className=\"card__topbar__button\">\n                        <Icon\n                          className=\"card__topbar__icon\"\n                          fontSize=\"small\"\n                          color={notification.icon.color}\n                        >\n                          {notification.icon.name}\n                        </Icon>\n                      </div>\n                      <span className=\"ml-4 font-medium text-muted\">\n                        {notification.heading}\n                      </span>\n                    </div>\n                    <small className=\"card__topbar__time text-muted\">\n                      {getTimeDifference(new Date(notification.timestamp))} ago\n                    </small>\n                  </div>\n                  <div className=\"px-4 pt-2 pb-4\">\n                    <p className=\"m-0\">{notification.title}</p>\n                    <small className=\"text-muted\">\n                      {notification.subtitle}\n                    </small>\n                  </div>\n                </Card>\n              </Link>\n            </div>\n          ))}\n\n          <div className=\"text-center\">\n            <Button onClick={deleteAllNotification}>Clear Notifications</Button>\n          </div>\n        </div>\n      </Drawer>\n    </ThemeProvider>\n  );\n};\n\nNotificationBar.propTypes = {\n  settings: PropTypes.object.isRequired,\n  notification: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  getNotification: PropTypes.func.isRequired,\n  deleteNotification: PropTypes.func.isRequired,\n  deleteAllNotification: PropTypes.func.isRequired,\n  notification: state.notification,\n  settings: state.layout.settings\n});\n\nexport default withStyles(\n  {},\n  { withTheme: true }\n)(\n  connect(mapStateToProps, {\n    getNotification,\n    deleteNotification,\n    deleteAllNotification\n  })(NotificationBar)\n);\n","import React from \"react\";\nimport { Icon, Badge, IconButton, Drawer } from \"@material-ui/core\";\nimport { ThemeProvider, withStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n  getCartList,\n  deleteProductFromCart,\n  updateCartAmount\n} from \"app/redux/actions/EcommerceActions\";\n\nlet cartListLoaded = false;\n\nfunction ShoppingCart(props) {\n  const {\n    container,\n    theme,\n    settings,\n    cartList = [],\n    getCartList,\n    deleteProductFromCart,\n    updateCartAmount,\n    user\n  } = props;\n\n  const [panelOpen, setPanelOpen] = React.useState(false);\n\n  if (!cartListLoaded) {\n    getCartList(user.userId);\n    cartListLoaded = true;\n  }\n\n  function handleDrawerToggle() {\n    setPanelOpen(!panelOpen);\n  }\n\n  const parentThemePalette = theme.palette;\n\n  return (\n    <ThemeProvider theme={settings.themes[settings.activeTheme]}>\n      <IconButton\n        onClick={handleDrawerToggle}\n        style={{\n          color:\n            parentThemePalette.type === \"light\"\n              ? parentThemePalette.text.secondary\n              : parentThemePalette.text.primary\n        }}\n      >\n        <Badge color=\"secondary\" badgeContent={cartList.length}>\n          <Icon>shopping_cart</Icon>\n        </Badge>\n      </IconButton>\n\n      <Drawer\n        container={container}\n        variant=\"temporary\"\n        anchor={\"right\"}\n        open={panelOpen}\n        onClose={handleDrawerToggle}\n        ModalProps={{\n          keepMounted: true\n        }}\n      >\n        <div className=\"mini-cart\">\n          <div className=\"cart__topbar flex items-center p-1 mb-2 pl-4\">\n            <Icon color=\"primary\">shopping_cart</Icon>\n            <h5 className=\"ml-2 my-0 font-medium\">Cart</h5>\n          </div>\n\n          {cartList.map(product => (\n            <div\n              key={product.id}\n              className=\"mini-cart__item flex items-center justify-between py-2 px-2\"\n            >\n              <div className=\"flex flex-column mr-2\">\n                <IconButton\n                  size=\"small\"\n                  onClick={() =>\n                    updateCartAmount(\n                      user.userId,\n                      product.id,\n                      product.amount + 1\n                    )\n                  }\n                >\n                  <Icon className=\"cursor-pointer\">keyboard_arrow_up</Icon>\n                </IconButton>\n                <IconButton\n                  disabled={!(product.amount - 1)}\n                  size=\"small\"\n                  onClick={() =>\n                    updateCartAmount(\n                      user.userId,\n                      product.id,\n                      product.amount - 1\n                    )\n                  }\n                >\n                  <Icon className=\"cursor-pointer\">keyboard_arrow_down</Icon>\n                </IconButton>\n              </div>\n              <div className=\"mr-2\">\n                <img src={product.imgUrl} alt={product.title} />\n              </div>\n              <div className=\"mr-2 text-center\">\n                <h6 className=\"m-0 mb-1\">{product.title}</h6>\n                <small className=\"text-muted\">\n                  ${product.price} x {product.amount}\n                </small>\n              </div>\n              <IconButton\n                size=\"small\"\n                onClick={() => deleteProductFromCart(user.userId, product.id)}\n              >\n                <Icon fontSize=\"small\">clear</Icon>\n              </IconButton>\n            </div>\n          ))}\n        </div>\n      </Drawer>\n    </ThemeProvider>\n  );\n}\n\nShoppingCart.propTypes = {\n  settings: PropTypes.object.isRequired,\n  cartList: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  settings: state.layout.settings,\n  getCartList: PropTypes.func.isRequired,\n  deleteProductFromCart: PropTypes.func.isRequired,\n  updateCartAmount: PropTypes.func.isRequired,\n  cartList: state.ecommerce.cartList,\n  user: state.user\n});\n\nexport default withStyles(\n  {},\n  { withTheme: true }\n)(\n  connect(mapStateToProps, {\n    getCartList,\n    deleteProductFromCart,\n    updateCartAmount\n  })(ShoppingCart)\n);\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Icon, IconButton, MenuItem } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { connect } from \"react-redux\";\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\nimport { logoutUser } from \"app/redux/actions/UserActions\";\nimport PropTypes from \"prop-types\";\nimport { MatxMenu, MatxSearchBox } from \"matx\";\nimport { isMdScreen, classList } from \"utils\";\nimport NotificationBar from \"../SharedCompoents/NotificationBar\";\nimport { Link } from \"react-router-dom\";\nimport ShoppingCart from \"../SharedCompoents/ShoppingCart\";\n\nconst styles = theme => ({\n  topbar: {\n    \"& .topbar-hold\": {\n      backgroundColor: theme.palette.primary.main,\n      height: \"80px\",\n      \"&.fixed\": {\n        boxShadow: theme.shadows[8],\n        height: \"64px\"\n      }\n    }\n  },\n  menuItem: {\n    display: \"flex\",\n    alignItems: \"center\",\n    minWidth: 185\n  }\n});\n\nclass Layout1Topbar extends Component {\n  state = {};\n\n  updateSidebarMode = sidebarSettings => {\n    let { settings, setLayoutSettings } = this.props;\n\n    setLayoutSettings({\n      ...settings,\n      layout1Settings: {\n        ...settings.layout1Settings,\n        leftSidebar: {\n          ...settings.layout1Settings.leftSidebar,\n          ...sidebarSettings\n        }\n      }\n    });\n  };\n\n  handleSidebarToggle = () => {\n    let { settings } = this.props;\n    let { layout1Settings } = settings;\n\n    let mode;\n    if (isMdScreen()) {\n      mode = layout1Settings.leftSidebar.mode === \"close\" ? \"mobile\" : \"close\";\n    } else {\n      mode = layout1Settings.leftSidebar.mode === \"full\" ? \"close\" : \"full\";\n    }\n    this.updateSidebarMode({ mode });\n  };\n\n  handleSignOut = () => {\n    this.props.logoutUser();\n  };\n\n  render() {\n    let { classes, fixed } = this.props;\n\n    return (\n      <div className={`topbar ${classes.topbar}`}>\n        <div className={classList({ \"topbar-hold\": true, fixed: fixed })}>\n          <div className=\"flex justify-between items-center h-full\">\n            <div className=\"flex\">\n              <IconButton\n                onClick={this.handleSidebarToggle}\n                className=\"hide-on-pc\"\n              >\n                <Icon>menu</Icon>\n              </IconButton>\n\n              <div className=\"hide-on-mobile\">\n                <IconButton>\n                  <Icon>mail_outline</Icon>\n                </IconButton>\n\n                <IconButton>\n                  <Icon>web_asset</Icon>\n                </IconButton>\n\n                <IconButton>\n                  <Icon>star_outline</Icon>\n                </IconButton>\n              </div>\n            </div>\n            <div className=\"flex items-center\">\n              <MatxSearchBox />\n\n              <NotificationBar />\n\n              <ShoppingCart></ShoppingCart>\n\n              <MatxMenu\n                menuButton={\n                  <img\n                    className=\"mx-2 align-middle circular-image-small cursor-pointer\"\n                    src=\"/assets/images/face-6.jpg\"\n                    alt=\"user\"\n                  />\n                }\n              >\n                <MenuItem>\n                  <Link className={classes.menuItem} to=\"/\">\n                    <Icon> home </Icon>\n                    <span className=\"pl-4\"> Home </span>\n                  </Link>\n                </MenuItem>\n                <MenuItem>\n                  {/* <Link\n                    className={classes.menuItem}\n                    to=\"/page-layouts/user-profile\"\n                  > */}\n                  <Icon> person </Icon>\n                  <span className=\"pl-4\"> Profile </span>\n                  {/* </Link> */}\n                </MenuItem>\n                <MenuItem className={classes.menuItem}>\n                  <Icon> settings </Icon>\n                  <span className=\"pl-4\"> Settings </span>\n                </MenuItem>\n                <MenuItem\n                  onClick={this.handleSignOut}\n                  className={classes.menuItem}\n                >\n                  <Icon> power_settings_new </Icon>\n                  <span className=\"pl-4\"> Logout </span>\n                </MenuItem>\n              </MatxMenu>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLayout1Topbar.propTypes = {\n  setLayoutSettings: PropTypes.func.isRequired,\n  logoutUser: PropTypes.func.isRequired,\n  settings: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  setLayoutSettings: PropTypes.func.isRequired,\n  logoutUser: PropTypes.func.isRequired,\n  settings: state.layout.settings\n});\n\nexport default withStyles(styles, { withTheme: true })(\n  withRouter(\n    connect(mapStateToProps, { setLayoutSettings, logoutUser })(Layout1Topbar)\n  )\n);\n","import React, { Fragment } from \"react\";\nimport Scrollbar from \"react-perfect-scrollbar\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport { navigations } from \"../../navigations\";\nimport { MatxVerticalNav } from \"matx\";\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\n\nconst Sidenav = props => {\n  const updateSidebarMode = sidebarSettings => {\n    let { settings, setLayoutSettings } = props;\n    let activeLayoutSettingsName = settings.activeLayout + \"Settings\";\n    let activeLayoutSettings = settings[activeLayoutSettingsName];\n\n    setLayoutSettings({\n      ...settings,\n      [activeLayoutSettingsName]: {\n        ...activeLayoutSettings,\n        leftSidebar: {\n          ...activeLayoutSettings.leftSidebar,\n          ...sidebarSettings\n        }\n      }\n    });\n  };\n\n  const renderOverlay = () => (\n    <div\n      onClick={() => updateSidebarMode({ mode: \"close\" })}\n      className=\"sidenav__overlay\"\n    />\n  );\n\n  return (\n    <Fragment>\n      <Scrollbar\n        options={{ suppressScrollX: true }}\n        className=\"scrollable position-relative\"\n      >\n        {props.children}\n        <MatxVerticalNav navigation={navigations} />\n      </Scrollbar>\n      {renderOverlay()}\n    </Fragment>\n  );\n};\n\nSidenav.propTypes = {\n  setLayoutSettings: PropTypes.func.isRequired,\n  settings: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  setLayoutSettings: PropTypes.func.isRequired,\n  settings: state.layout.settings\n});\n\nexport default withRouter(\n  connect(mapStateToProps, {\n    setLayoutSettings\n  })(Sidenav)\n);\n","import React from \"react\";\n\nconst Brand = ({ children }) => {\n  return (\n    <div className=\"flex items-center justify-between brand-area\">\n      <div className=\"flex items-center brand\">\n        <img src=\"/assets/images/logo.png\" alt=\"company-logo\" />\n        <span className=\"brand__text\">Matx</span>\n      </div>\n      {children}\n    </div>\n  );\n};\n\nexport default Brand;\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\"\n\nconst styles = theme => ({\n  root: {\n    backgroundColor: theme.palette.background.default,\n    color: theme.palette.text.primary,\n    \"& .sidenav\": {\n      \"& .sidenav__hold\": {\n        opacity: \"1 !important\",\n        \"&::after\": {\n          background: theme.palette.primary.main,\n          opacity: .96\n        },\n        \"& .nav-item:not(.badge)\": {\n          color: theme.palette.text.primary\n        },\n        \"& .nav-item\": {\n          \"&.active, &.active:hover\": {\n            background: theme.palette.secondary.main\n          },\n          \"& .icon-text::after\": {\n            background: theme.palette.text.primary\n          }\n        }\n      }\n    }\n  }\n});\n\nconst SidenavThemeStyles = ({ children, classes }) => {\n  return <div className={classes.root}>{children}</div>;\n};\n\nexport default withStyles(styles, { withTheme: true })(SidenavThemeStyles);\n","import React from \"react\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport SidenavThemeStyles from \"./SidenavThemeStyles\";\n\nconst SidenavTheme = ({ theme, settings, children }) => {\n  return (\n    <ThemeProvider theme={theme}>\n      <SidenavThemeStyles theme={theme} settings={settings}>\n        {children}\n      </SidenavThemeStyles>\n    </ThemeProvider>\n  );\n};\n\nexport default SidenavTheme;\n","import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Switch, Icon, MenuItem, Tooltip, IconButton } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport { connect } from \"react-redux\";\nimport {\n  setLayoutSettings,\n  setDefaultSettings\n} from \"app/redux/actions/LayoutActions\";\nimport { logoutUser } from \"app/redux/actions/UserActions\";\nimport { withRouter } from \"react-router-dom\";\nimport { MatxMenu } from \"matx\";\nimport Sidenav from \"../SharedCompoents/Sidenav\";\nimport Brand from \"../SharedCompoents/Brand\";\nimport SidenavTheme from \"../MatxTheme/SidenavTheme/SidenavTheme\";\nimport { isMdScreen } from \"utils\";\nimport { merge } from \"lodash\";\n\nconst styles = theme => ({});\n\nconst IconButtonWhite = withStyles(theme => ({\n  root: {\n    backgroundColor: \"transparent\",\n    padding: \"5px\"\n  }\n}))(IconButton);\n\nconst IconSmall = withStyles(() => ({\n  root: {\n    fontSize: \"1rem\"\n  }\n}))(Icon);\n\nclass Layout1Sidenav extends Component {\n  state = {\n    hidden: true\n  };\n\n  componentDidMount() {\n    // CLOSE SIDENAV ON ROUTE CHANGE ON MOBILE\n    this.unlistenRouteChange = this.props.history.listen((location, action) => {\n      if (isMdScreen()) {\n        this.updateSidebarMode({ mode: \"close\" });\n      }\n    });\n\n    setTimeout(() => {\n      this.setState({ hidden: false });\n    }, 400);\n  }\n\n  componentWillUnmount() {\n    this.unlistenRouteChange();\n  }\n\n  updateSidebarMode = sidebarSettings => {\n    let { settings, setLayoutSettings, setDefaultSettings } = this.props;\n    const updatedSettings = merge({}, settings, {\n      layout1Settings: {\n        leftSidebar: {\n          ...sidebarSettings\n        }\n      }\n    });\n\n    setLayoutSettings(updatedSettings);\n    setDefaultSettings(updatedSettings);\n  };\n\n  handleSidenavToggle = () => {\n    let {\n      settings: {\n        layout1Settings: {\n          leftSidebar: { mode }\n        }\n      }\n    } = this.props;\n\n    console.log(mode);\n\n    this.updateSidebarMode({ mode: mode === \"compact\" ? \"full\" : \"compact\" });\n  };\n\n  handleSignOut = () => {\n    this.props.logoutUser();\n  };\n\n  renderLogoSwitch = () => (\n    // Open Brand component file to replace logo and text\n    <Brand>\n      <Switch\n        className=\"sidenav__toggle show-on-pc\"\n        onChange={this.handleSidenavToggle}\n        checked={\n          !(this.props.settings.layout1Settings.leftSidebar.mode === \"full\")\n        }\n        color=\"secondary\"\n      />\n    </Brand>\n  );\n\n  renderUser = () => {\n    let { user } = this.props;\n    return (\n      <div className=\"sidenav__user\">\n        <div className=\"username-photo\">\n          <img src={user.photoURL} alt=\"user\" />\n        </div>\n        <div className=\"ml-4\">\n          <span className=\"username\">\n            {/* <Icon>lock</Icon> */}\n            {user.displayName}\n          </span>\n          <div className=\"user__menu\">\n            <MatxMenu\n              menuButton={\n                <Tooltip title=\"Settings\">\n                  <IconButtonWhite\n                    aria-label=\"Delete\"\n                    className=\"\"\n                    size=\"small\"\n                  >\n                    <IconSmall> settings </IconSmall>\n                  </IconButtonWhite>\n                </Tooltip>\n              }\n            >\n              <MenuItem className=\"flex items-center\">\n                <Icon> home </Icon>\n                <span className=\"pl-4\"> Home </span>\n              </MenuItem>\n              <MenuItem className=\"flex items-center\">\n                <Icon> settings </Icon>\n                <span className=\"pl-4\"> Account Setting </span>\n              </MenuItem>\n            </MatxMenu>\n\n            <Tooltip title=\"Profile\">\n              <IconButtonWhite aria-label=\"Delete\" className=\"\" size=\"small\">\n                <IconSmall>person</IconSmall>\n              </IconButtonWhite>\n            </Tooltip>\n            <Tooltip title=\"Sign out\">\n              <IconButtonWhite\n                aria-label=\"Delete\"\n                className=\"\"\n                size=\"small\"\n                onClick={this.handleSignOut}\n              >\n                <IconSmall>exit_to_app</IconSmall>\n              </IconButtonWhite>\n            </Tooltip>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  render() {\n    let { theme, settings } = this.props;\n    const sidenavTheme =\n      settings.themes[settings.layout1Settings.leftSidebar.theme] || theme;\n    return (\n      <SidenavTheme theme={sidenavTheme} settings={settings}>\n        <div className=\"sidenav\">\n          <div\n            className=\"sidenav__hold\"\n            style={{\n              backgroundImage: `url(${settings.layout1Settings.leftSidebar.bgImgURL})`\n            }}\n          >\n            {!this.state.hidden && (\n              <Fragment>\n                {this.renderLogoSwitch()}\n                <Sidenav>{this.renderUser()}</Sidenav>\n              </Fragment>\n            )}\n          </div>\n        </div>\n      </SidenavTheme>\n    );\n  }\n}\n\nLayout1Sidenav.propTypes = {\n  setLayoutSettings: PropTypes.func.isRequired,\n  setDefaultSettings: PropTypes.func.isRequired,\n  logoutUser: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  settings: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  setDefaultSettings: PropTypes.func.isRequired,\n  setLayoutSettings: PropTypes.func.isRequired,\n  logoutUser: PropTypes.func.isRequired,\n  user: state.user,\n  settings: state.layout.settings\n});\n\nexport default withStyles(styles, { withTheme: true })(\n  withRouter(\n    connect(mapStateToProps, {\n      setLayoutSettings,\n      setDefaultSettings,\n      logoutUser\n    })(Layout1Sidenav)\n  )\n);\n","import React from \"react\";\nimport { withStyles, ThemeProvider } from \"@material-ui/core/styles\";\nimport { Button, Toolbar, AppBar } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nconst Footer = ({ theme, settings }) => {\n  const footerTheme = settings.themes[settings.footer.theme] || theme;\n  return (\n    <ThemeProvider theme={footerTheme}>\n      <AppBar color=\"primary\" position=\"static\">\n        <Toolbar className=\"footer flex items-center\">\n          <div className=\"flex items-center container w-full\">\n            <a\n              href=\"https://ui-lib.com/downloads/matx-react-material-design-admin-template/\"\n              className=\"mr-2\"\n            >\n              <Button variant=\"contained\">Download Matx</Button>\n            </a>\n            <a href=\"https://ui-lib.com/downloads/matx-pro-react-material-design-admin-template/\">\n              <Button variant=\"contained\" color=\"secondary\">\n                Get MatX Pro\n              </Button>\n            </a>\n            <span className=\"m-auto\"></span>\n            <p className=\"m-0\">\n              Design and Developed by <a href=\"http://ui-lib.com\">UI Lib</a>\n            </p>\n          </div>\n        </Toolbar>\n      </AppBar>\n    </ThemeProvider>\n  );\n};\n\nFooter.propTypes = {\n  settings: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  settings: state.layout.settings\n});\n\nexport default withStyles(\n  {},\n  { withTheme: true }\n)(connect(mapStateToProps, {})(Footer));\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\nimport { Fab, IconButton, Icon, useMediaQuery } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { merge } from \"lodash\";\nimport PropTypes from \"prop-types\";\nimport { classList } from \"utils\";\n\nconst styles = theme => ({\n  toggle: {\n    position: \"fixed\",\n    right: \"-30px\",\n    bottom: \"20px\",\n    zIndex: 9999,\n    transition: \"all 0.15s ease\",\n    \"&.open\": {\n      right: \"10px\"\n    }\n  }\n});\n\nconst SecondarySidebarToggle = ({ classes, settings, setLayoutSettings }) => {\n  let isMobile = useMediaQuery(\"(max-width:767px)\");\n\n  const toggle = () => {\n    setLayoutSettings(\n      merge({}, settings, {\n        secondarySidebar: { open: !settings.secondarySidebar.open }\n      })\n    );\n  };\n\n  useEffect(() => {\n    setLayoutSettings(\n      merge({}, settings, {\n        secondarySidebar: { open: !isMobile }\n      })\n    );\n  }, [isMobile, setLayoutSettings]);\n\n  return (\n    <div\n      className={\n        classes.toggle +\n        \" \" +\n        classList({\n          open: settings.secondarySidebar.open\n        })\n      }\n    >\n      {settings.secondarySidebar.open && (\n        <IconButton onClick={toggle} size=\"small\" aria-label=\"toggle\">\n          <Icon>arrow_right</Icon>\n        </IconButton>\n      )}\n      {!settings.secondarySidebar.open && (\n        <Fab\n          variant=\"extended\"\n          size=\"small\"\n          color=\"primary\"\n          aria-label=\"add\"\n          className=\"pr-9\"\n          onClick={toggle}\n        >\n          <Icon>arrow_left</Icon>\n        </Fab>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  settings: state.layout.settings,\n  setLayoutSettings: PropTypes.func.isRequired\n});\n\nexport default withStyles(styles, { withTheme: true })(\n  connect(mapStateToProps, { setLayoutSettings })(SecondarySidebarToggle)\n);\n","import { Badge } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\"\n\nconst BadgeSelected = withStyles(theme => ({\n  badge: {\n    top: \"0\",\n    right: \"0\",\n    height: \"32px\",\n    width: \"32px\",\n    borderRadius: \"50%\"\n  }\n}))(Badge);\n\nexport default BadgeSelected;\n","\nexport const mainThemes = ['purple1', 'purple2', 'blue', 'purpleDark1', 'purpleDark2', 'blueDark'];\n\nexport const mainSidebarThemes = ['white', 'slateDark1', 'slateDark2', 'purpleDark1', 'purpleDark2', 'blueDark'];\n\nexport const topbarThemes = ['white', 'slateDark1', 'slateDark2', 'purpleDark1', 'purpleDark2', 'blueDark'];","import React, { Fragment } from \"react\";\nimport {\n  Tooltip,\n  Radio,\n  RadioGroup,\n  FormGroup,\n  Icon,\n  Switch,\n  Grid,\n  FormControlLabel,\n  FormControl,\n  FormLabel,\n  Paper\n} from \"@material-ui/core\";\nimport { get } from \"lodash\";\nimport { themeColors } from \"../../MatxTheme/themeColors\";\nimport BadgeSelected from \"./BadgeSelected\";\nimport { mainSidebarThemes, topbarThemes } from \"./customizerOptions\";\n\nconst sidebarBG = [\n  \"/assets/images/sidebar/sidebar-bg-dark.jpg\",\n  \"/assets/images/sidebar/sidebar-bg-light.jpg\"\n];\n\nconst Layout1Customizer = ({ settings, handleChange, handleControlChange }) => {\n  return (\n    <Fragment>\n      <div className=\"mb-4 mx-3\">\n        <div className=\"text-muted mb-4\">Sidebar theme</div>\n        <div className=\"colors\">\n          {mainSidebarThemes\n            // .filter(c => themeColors[c].palette.type === \"dark\")\n            .map((color, i) => (\n              <Tooltip key={i} title={color} placement=\"top\">\n                <div\n                  className=\"color\"\n                  onClick={() =>\n                    handleChange(\"layout1Settings.leftSidebar.theme\", color)\n                  }\n                  style={{\n                    backgroundColor: themeColors[color].palette.primary.main\n                  }}\n                >\n                  {settings.layout1Settings.leftSidebar.theme === color && (\n                    <Icon>done</Icon>\n                  )}\n                  <div className={settings.themes[color].palette.type}></div>\n                </div>\n              </Tooltip>\n            ))}\n        </div>\n      </div>\n\n      <div className=\"mb-8 mx-3\">\n        <div className=\"text-muted mb-4\">Topbar theme</div>\n        <div className=\"colors\">\n          {topbarThemes.map((color, i) => (\n            <Tooltip key={i} title={color} placement=\"top\">\n              <div\n                className=\"color\"\n                onClick={() =>\n                  handleChange(\"layout1Settings.topbar.theme\", color)\n                }\n                style={{\n                  backgroundColor: themeColors[color].palette.primary.main\n                }}\n              >\n                {settings.layout1Settings.topbar.theme === color && (\n                  <Icon>done</Icon>\n                )}\n                <div className={settings.themes[color].palette.type}></div>\n              </div>\n            </Tooltip>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"mx-3 mb-6\">\n        <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">Sidebar mode</FormLabel>\n          <RadioGroup\n            aria-label=\"Sidebar\"\n            name=\"leftSidebar\"\n            value={settings.layout1Settings.leftSidebar.mode}\n            onChange={handleControlChange(\"layout1Settings.leftSidebar.mode\")}\n          >\n            <FormControlLabel value=\"full\" control={<Radio />} label=\"Full\" />\n            <FormControlLabel value=\"close\" control={<Radio />} label=\"Close\" />\n            <FormControlLabel\n              value=\"compact\"\n              control={<Radio />}\n              label=\"Compact\"\n            />\n          </RadioGroup>\n        </FormControl>\n      </div>\n\n      <div className=\"mb-8 mx-3\">\n        <div className=\"text-muted mb-8\">Sidebar background image</div>\n\n        <div className=\"layout-boxes sidebar-bg\">\n          <Grid container spacing={3}>\n            {sidebarBG.map((bg, i) => (\n              <Grid item lg={4} key={i}>\n                <BadgeSelected\n                  color=\"primary\"\n                  className=\"layout-box mr-4\"\n                  badgeContent={<Icon>done</Icon>}\n                  invisible={\n                    settings.layout1Settings.leftSidebar.bgImgURL !== bg\n                  }\n                >\n                  <Paper\n                    onClick={() =>\n                      handleChange(\"layout1Settings.leftSidebar.bgImgURL\", bg)\n                    }\n                    className=\"h-160\"\n                  >\n                    <img src={bg} alt=\"\" />\n                  </Paper>\n                </BadgeSelected>\n              </Grid>\n            ))}\n          </Grid>\n        </div>\n      </div>\n\n      {/* <div className=\"mb-8 mx-3\">\n        <div className=\"text-muted\">Sidebar background opacity</div>\n        <Slider\n          value={settings.layout1Settings.leftSidebar.bgOpacity}\n          onChange={(event, value) =>\n            handleChange(\"layout1Settings.leftSidebar.bgOpacity\", value)\n          }\n          marks={true}\n          step={0.02}\n          max={1}\n          min={0.5}\n          valueLabelDisplay=\"auto\"\n          aria-labelledby=\"sidebar-bgOpacity\"\n        />\n      </div> */}\n\n      <div className=\"mx-3 mb-6\">\n        <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">Topbar</FormLabel>\n          <FormGroup>\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={get(settings.layout1Settings.topbar, \"show\")}\n                  onChange={handleControlChange(\"layout1Settings.topbar.show\")}\n                />\n              }\n              label=\"Show\"\n            />\n\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={get(settings.layout1Settings.topbar, \"fixed\")}\n                  onChange={handleControlChange(\"layout1Settings.topbar.fixed\")}\n                />\n              }\n              label=\"Fixed\"\n            />\n          </FormGroup>\n        </FormControl>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Layout1Customizer;\n","import React, { Fragment } from \"react\";\nimport {\n  Tooltip,\n  Radio,\n  RadioGroup,\n  Icon,\n  FormControlLabel,\n  FormControl,\n  FormLabel\n} from \"@material-ui/core\";\nimport { themeColors } from \"../../MatxTheme/themeColors\";\n\nconst Layout2Customizer = ({ settings, handleChange, handleControlChange }) => {\n  return (\n    <Fragment>\n      <div className=\"mb-4 mx-3\">\n        <div className=\"text-muted mb-4\">Topbar theme</div>\n        <div className=\"colors\">\n          {Object.keys(themeColors).map((color, i) => (\n            <Tooltip key={i} title={color} placement=\"top\">\n              <div\n                className=\"color\"\n                onClick={() =>\n                  handleChange(\"layout2Settings.topbar.theme\", color)\n                }\n                style={{\n                  backgroundColor: themeColors[color].palette.primary.main\n                }}\n              >\n                {settings.layout2Settings.topbar.theme === color && (\n                  <Icon>done</Icon>\n                )}\n                <div className={settings.themes[color].palette.type}></div>\n              </div>\n            </Tooltip>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"mb-4 mx-3\">\n        <div className=\"text-muted mb-4\">Navbar theme</div>\n        <div className=\"colors\">\n          {Object.keys(themeColors).map((color, i) => (\n            <Tooltip key={i} title={color} placement=\"top\">\n              <div\n                className=\"color\"\n                onClick={() =>\n                  handleChange(\"layout2Settings.navbar.theme\", color)\n                }\n                style={{\n                  backgroundColor: themeColors[color].palette.primary.main\n                }}\n              >\n                {settings.layout2Settings.navbar.theme === color && (\n                  <Icon>done</Icon>\n                )}\n                <div className={settings.themes[color].palette.type}></div>\n              </div>\n            </Tooltip>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"mx-3 mb-6\">\n        <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">Layout mode</FormLabel>\n          <RadioGroup\n            aria-label=\"layout-mode\"\n            name=\"layoutMode\"\n            value={settings.layout2Settings.mode}\n            onChange={handleControlChange(\"layout2Settings.mode\")}\n          >\n            <FormControlLabel value=\"full\" control={<Radio />} label=\"Full\" />\n            <FormControlLabel\n              value=\"contained\"\n              control={<Radio />}\n              label=\"Contained\"\n            />\n            <FormControlLabel value=\"boxed\" control={<Radio />} label=\"Boxed\" />\n          </RadioGroup>\n        </FormControl>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Layout2Customizer;\n","import React, { Fragment, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  setLayoutSettings,\n  setDefaultSettings\n} from \"app/redux/actions/LayoutActions\";\nimport PropTypes from \"prop-types\";\nimport {\n  Icon,\n  IconButton,\n  Button,\n  FormGroup,\n  Tooltip,\n  Switch,\n  FormControlLabel,\n  FormControl,\n  FormLabel,\n  Paper\n} from \"@material-ui/core\";\nimport { withStyles, ThemeProvider } from \"@material-ui/core/styles\";\nimport Scrollbar from \"react-perfect-scrollbar\";\nimport { merge, get, set } from \"lodash\";\nimport Layout1Customizer from \"./Layout1Customizer\";\nimport Layout2Customizer from \"./Layout2Customizer\";\nimport { themeColors } from \"../../MatxTheme/themeColors\";\nimport BadgeSelected from \"./BadgeSelected\";\nimport { mainThemes, topbarThemes } from \"./customizerOptions\";\n\nconst styles = theme => ({\n  root: {}\n});\n\nconst MatxCustomizer = props => {\n  const [open, setOpen] = useState(false);\n\n  let { settings, classes, setLayoutSettings, setDefaultSettings } = props;\n\n  const demoLayouts = [\n    {\n      name: \"Light Sidebar\",\n      thumbnail: \"/assets/images/screenshots/layout1-customizer.png\",\n      isPro: false,\n      options: {\n        activeLayout: \"layout1\",\n        activeTheme: \"purple1\",\n        layout1Settings: {\n          leftSidebar: {\n            theme: \"white\",\n            bgOpacity: 0.98\n          },\n          topbar: {\n            theme: \"purpleDark1\",\n            fixed: true\n          }\n        },\n        footer: {\n          theme: \"slateDark1\"\n        }\n      }\n    },\n    {\n      name: \"Dark Sidebar\",\n      thumbnail: \"/assets/images/screenshots/layout2-customizer.png\",\n      isPro: false,\n      options: {\n        activeLayout: \"layout1\",\n        activeTheme: \"purple1\",\n        layout1Settings: {\n          leftSidebar: {\n            theme: \"slateDark1\",\n            bgOpacity: 0.92\n          },\n          topbar: {\n            theme: \"purpleDark1\",\n            fixed: false\n          }\n        }\n      }\n    },\n    {\n      name: \"Dark Theme\",\n      thumbnail: \"/assets/images/screenshots/layout3-customizer.png\",\n      isPro: false,\n      options: {\n        activeLayout: \"layout1\",\n        activeTheme: \"purpleDark1\",\n        layout1Settings: {\n          leftSidebar: {\n            theme: \"slateDark1\",\n            bgOpacity: 0.92\n          },\n          topbar: {\n            theme: \"purpleDark1\",\n            fixed: false\n          }\n        },\n        footer: {\n          theme: \"slateDark1\"\n        }\n      }\n    },\n    {\n      name: \"Horizontal Navigation\",\n      thumbnail: \"/assets/images/screenshots/layout4-customizer.png\",\n      isPro: true,\n      options: {\n        activeLayout: \"layout2\",\n        activeTheme: \"purple1\",\n        layout2Settings: {\n          mode: \"full\"\n          // topbar: {\n          //   theme: \"slateDark1\"\n          // }\n        },\n        footer: {\n          theme: \"slateDark1\"\n        }\n      }\n    }\n  ];\n\n  const updateSettings = newSettings => {\n    let updatedSettings = merge({}, settings, newSettings);\n    setLayoutSettings(updatedSettings);\n    setDefaultSettings(updatedSettings);\n  };\n\n  const handleChange = (name, value) => {\n    let { settings } = props;\n    let updatedSettings = set(settings, name, value);\n\n    updateSettings(updatedSettings);\n  };\n\n  const handleControlChange = name => event => {\n    let controlValue =\n      event.target.type === \"checkbox\"\n        ? event.target.checked\n        : event.target.value;\n    handleChange(name, controlValue);\n  };\n\n  const tooglePanel = () => {\n    setOpen(!open);\n  };\n\n  let activeTheme = { ...settings.themes[settings.activeTheme] };\n  // console.log(activeTheme);\n\n  return (\n    <Fragment>\n      <Tooltip title=\"Theme Settings\" placement=\"left\">\n        <IconButton\n          size=\"small\"\n          aria-label=\"delete\"\n          className=\"my-3\"\n          onClick={tooglePanel}\n        >\n          <Icon className=\"spin\">settings</Icon>\n        </IconButton>\n      </Tooltip>\n\n      {open && (\n        <ThemeProvider theme={activeTheme}>\n          <div\n            className={`matx-customizer pb-8 ${classes.root}`}\n            style={{\n              backgroundColor: activeTheme.palette.background.default\n            }}\n          >\n            <div className=\"flex felx-row items-center p-4 mb-4 min-h-64 elevation-z6\">\n              <Icon color=\"primary\">settings</Icon>\n              <h5 className=\"mb-0 ml-2\">Theme Settings</h5>\n              <IconButton onClick={tooglePanel} className=\"customizer-close\">\n                <Icon>close</Icon>\n              </IconButton>\n            </div>\n            <Scrollbar options={{ suppressScrollX: true }} className=\"px-4\">\n              <div className=\"mt-2 mb-8 mx-3\">\n                <div className=\"text-muted\">Layouts</div>\n\n                <div className=\"layout-boxes\">\n                  {demoLayouts.map(layout => (\n                    <BadgeSelected\n                      color=\"secondary\"\n                      className=\"layout-box\"\n                      badgeContent={\"Pro\"}\n                      invisible={!layout.isPro}\n                      key={layout.name}\n                    >\n                      <Paper\n                        onClick={() => updateSettings(layout.options)}\n                        elevation={4}\n                      >\n                        <span className=\"layout-name\">\n                          <Button variant=\"contained\" color=\"secondary\">\n                            {layout.name}\n                          </Button>\n                        </span>\n\n                        <img src={layout.thumbnail} alt={layout.name} />\n                      </Paper>\n                    </BadgeSelected>\n                  ))}\n                </div>\n              </div>\n              {/* END LAYOUT */}\n\n              <div className=\"mb-4 mx-3\">\n                <div className=\"text-muted mb-4\">Main theme</div>\n                <div className=\"colors\">\n                  {mainThemes.map((color, i) => (\n                    <Tooltip key={i} title={color} placement=\"top\">\n                      <div\n                        className=\"color\"\n                        onClick={() => updateSettings({ activeTheme: color })}\n                        style={{\n                          backgroundColor:\n                            themeColors[color].palette.primary.main\n                        }}\n                      >\n                        {settings.activeTheme === color && <Icon>done</Icon>}\n                        <div\n                          className={settings.themes[color].palette.type}\n                        ></div>\n                      </div>\n                    </Tooltip>\n                  ))}\n                </div>\n              </div>\n\n              {settings.activeLayout === \"layout1\" && (\n                <Layout1Customizer\n                  settings={settings}\n                  handleChange={handleChange}\n                  handleControlChange={handleControlChange}\n                />\n              )}\n\n              {settings.activeLayout === \"layout2\" && (\n                <Layout2Customizer\n                  settings={settings}\n                  handleChange={handleChange}\n                  handleControlChange={handleControlChange}\n                />\n              )}\n\n              <div className=\"mx-3 mb-6\">\n                <FormControl component=\"fieldset\">\n                  <FormLabel component=\"legend\">Footer</FormLabel>\n                  <FormGroup>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          checked={get(settings.footer, \"show\")}\n                          onChange={handleControlChange(\"footer.show\")}\n                        />\n                      }\n                      label=\"Show\"\n                    />\n\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          checked={get(\n                            settings.layout1Settings.footer,\n                            \"fixed\"\n                          )}\n                          onChange={handleControlChange(\"footer.fixed\")}\n                        />\n                      }\n                      label=\"Fixed\"\n                    />\n                  </FormGroup>\n                </FormControl>\n              </div>\n\n              <div className=\"mx-3 mb-6\">\n                <FormControl component=\"fieldset\">\n                  <FormLabel component=\"legend\">Secondary sidebar</FormLabel>\n                  <FormGroup>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          checked={get(settings.secondarySidebar, \"show\")}\n                          onChange={handleControlChange(\n                            \"secondarySidebar.show\"\n                          )}\n                        />\n                      }\n                      label=\"Show\"\n                    />\n                  </FormGroup>\n                </FormControl>\n              </div>\n\n              <div className=\"mb-4 mx-3\">\n                <div className=\"text-muted mb-4\">Secondary sidebar theme</div>\n                <div className=\"colors\">\n                  {topbarThemes.map((color, i) => (\n                    <Tooltip key={i} title={color} placement=\"top\">\n                      <div\n                        className=\"color\"\n                        onClick={() =>\n                          handleChange(\"secondarySidebar.theme\", color)\n                        }\n                        style={{\n                          backgroundColor:\n                            themeColors[color].palette.primary.main\n                        }}\n                      >\n                        {settings.secondarySidebar.theme === color && (\n                          <Icon>done</Icon>\n                        )}\n                        <div\n                          className={settings.themes[color].palette.type}\n                        ></div>\n                      </div>\n                    </Tooltip>\n                  ))}\n                </div>\n              </div>\n\n              <div className=\"mb-4 mx-3\">\n                <div className=\"text-muted mb-4\">Footer theme</div>\n                <div className=\"colors\">\n                  {topbarThemes.map((color, i) => (\n                    <Tooltip key={i} title={color} placement=\"top\">\n                      <div\n                        className=\"color\"\n                        onClick={() => handleChange(\"footer.theme\", color)}\n                        style={{\n                          backgroundColor:\n                            themeColors[color].palette.primary.main\n                        }}\n                      >\n                        {settings.footer.theme === color && <Icon>done</Icon>}\n                        <div\n                          className={settings.themes[color].palette.type}\n                        ></div>\n                      </div>\n                    </Tooltip>\n                  ))}\n                </div>\n              </div>\n            </Scrollbar>\n          </div>\n        </ThemeProvider>\n      )}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = state => ({\n  settings: state.layout.settings,\n  setLayoutSettings: PropTypes.func.isRequired,\n  setDefaultSettings: PropTypes.func.isRequired\n});\n\nexport default withStyles(styles, { withTheme: true })(\n  connect(mapStateToProps, { setLayoutSettings, setDefaultSettings })(\n    MatxCustomizer\n  )\n);\n","import React, { Component } from \"react\";\nimport { IconButton, Icon } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { classList } from \"utils\";\nimport MatxCustomizer from \"../MatxCustomizer/MatxCustomizer\";\nimport ShoppingCart from \"../ShoppingCart\";\nconst width = \"50px\";\n\nconst styles = theme => ({\n  root: {\n    position: \"fixed\",\n    height: \"100vh\",\n    width,\n    right: 0,\n    bottom: 0,\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    boxShadow: theme.shadows[8],\n    backgroundColor: theme.palette.primary.main,\n    zIndex: 98,\n    transition: \"all 0.15s ease\"\n  },\n  \"@global\": {\n    \"@media screen and (min-width: 767px)\": {\n      \".content-wrap, .layout2.layout-contained, .layout2.layout-full\": {\n        marginRight: width\n      },\n      \".matx-customizer\": {\n        right: width\n      }\n    },\n    \"@media screen and (max-width: 959px)\": {\n      \".toolbar-menu-wrap .menu-area\": {\n        width: `calc(100% - ${width})`\n      }\n    }\n  }\n});\n\nclass SecondarySidebarContent extends Component {\n  render() {\n    let { classes } = this.props;\n\n    return (\n      <div\n        className={\n          classes.root +\n          \" \" +\n          classList({\n            \"secondary-sidebar\": true\n          })\n        }\n      >\n        <span className=\"m-auto\"></span>\n\n        <MatxCustomizer />\n\n        <ShoppingCart />\n\n        <Link to=\"/chat\">\n          <IconButton size=\"small\" aria-label=\"delete\" className=\"my-3\">\n            <Icon>comments</Icon>\n          </IconButton>\n        </Link>\n\n        <span className=\"m-auto\"></span>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  settings: state.layout.settings\n});\n\nexport default withStyles(styles, { withTheme: true })(\n  withRouter(connect(mapStateToProps, {})(SecondarySidebarContent))\n);\n","import React from \"react\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\n\nconst SecondarySidenavTheme = ({ theme, classes, children, open }) => {\n  return (\n    <ThemeProvider theme={theme}>\n      {children}\n    </ThemeProvider>\n  );\n};\nexport default SecondarySidenavTheme\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport SecondarySidebarToggle from \"./SecondarySidebarToggle\";\nimport SecondarySidebarContent from \"./SecondarySidebarContent\";\nimport SecondarySidenavTheme from \"../../MatxTheme/SecondarySidenavTheme/SecondarySidenavTheme\";\n\nconst SecondarySidebar = ({ settings }) => {\n  const secondarySidebarTheme =\n    settings.themes[settings.secondarySidebar.theme];\n\n  return (\n    <SecondarySidenavTheme theme={secondarySidebarTheme}>\n      {settings.secondarySidebar.open && (\n        <SecondarySidebarContent />\n      )}\n      <SecondarySidebarToggle />\n    </SecondarySidenavTheme>\n  );\n};\n\nconst mapStateToProps = state => ({\n  settings: state.layout.settings\n});\n\nexport default connect(mapStateToProps, {})(SecondarySidebar);\n","import React, { useContext } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\nimport { withStyles, ThemeProvider } from \"@material-ui/core/styles\";\nimport Scrollbar from \"react-perfect-scrollbar\";\nimport { classList } from \"utils\";\nimport { renderRoutes } from \"react-router-config\";\nimport Layout1Topbar from \"./Layout1Topbar\";\nimport Layout1Sidenav from \"./Layout1Sidenav\";\nimport Footer from \"../SharedCompoents/Footer\";\nimport SecondarySidebar from \"../SharedCompoents/SecondarySidebar/SecondarySidebar\";\nimport AppContext from \"app/appContext\";\nimport { MatxSuspense } from \"matx\";\n\nconst styles = theme => {\n  return {\n    layout: {\n      backgroundColor: theme.palette.background.default\n    }\n  };\n};\n\nconst Layout1 = props => {\n  const { routes } = useContext(AppContext);\n  let { settings, classes, theme } = props;\n  let { layout1Settings } = settings;\n  const topbarTheme = settings.themes[layout1Settings.topbar.theme];\n  let layoutClasses = {\n    [classes.layout]: true,\n    [`${settings.activeLayout} sidenav-${layout1Settings.leftSidebar.mode} theme-${theme.palette.type} flex`]: true,\n    \"topbar-fixed\": layout1Settings.topbar.fixed\n  };\n\n  return (\n    <div className={classList(layoutClasses)}>\n      {layout1Settings.leftSidebar.show && <Layout1Sidenav />}\n\n      <div className=\"content-wrap position-relative\">\n        {layout1Settings.topbar.show && layout1Settings.topbar.fixed && (\n          <ThemeProvider theme={topbarTheme}>\n            <Layout1Topbar fixed={true} className=\"elevation-z8\" />\n          </ThemeProvider>\n        )}\n\n        {settings.perfectScrollbar && (\n          <Scrollbar className=\"scrollable-content\">\n            {layout1Settings.topbar.show && !layout1Settings.topbar.fixed && (\n              <ThemeProvider theme={topbarTheme}>\n                <Layout1Topbar />\n              </ThemeProvider>\n            )}\n            <div className=\"content\">\n              <MatxSuspense>{renderRoutes(routes)}</MatxSuspense>\n            </div>\n            <div className=\"my-auto\" />\n            {settings.footer.show && !settings.footer.fixed && <Footer />}\n          </Scrollbar>\n        )}\n\n        {!settings.perfectScrollbar && (\n          <div className=\"scrollable-content\">\n            {layout1Settings.topbar.show && !layout1Settings.topbar.fixed && (\n              <Layout1Topbar />\n            )}\n            <div className=\"content\">\n              <MatxSuspense>{renderRoutes(routes)}</MatxSuspense>\n            </div>\n            <div className=\"my-auto\" />\n            {settings.footer.show && !settings.footer.fixed && <Footer />}\n          </div>\n        )}\n\n        {settings.footer.show && settings.footer.fixed && <Footer />}\n      </div>\n      {settings.secondarySidebar.show && <SecondarySidebar />}\n    </div>\n  );\n};\n\nLayout1.propTypes = {\n  settings: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  setLayoutSettings: PropTypes.func.isRequired,\n  settings: state.layout.settings\n});\n\nexport default withStyles(styles, { withTheme: true })(\n  connect(mapStateToProps, { setLayoutSettings })(Layout1)\n);\n"],"sourceRoot":""}