{"version":3,"sources":["app/views/material-kit/forms/SimpleForm.jsx","app/views/forms/BasicForm.jsx"],"names":["SimpleForm","state","username","firstName","email","date","Date","creditCard","mobile","password","confirmPassword","gender","agreement","handleSubmit","event","handleChange","persist","setState","target","name","value","handleDateChange","ValidatorForm","addValidationRule","removeValidationRule","this","ref","onSubmit","onError","errors","container","spacing","item","lg","md","sm","xs","className","label","onChange","type","validators","errorMessages","utils","DateFnsUtils","margin","id","inputVariant","autoOk","KeyboardButtonProps","row","control","color","labelPlacement","variant","Component","BasicForm","routeSegments","path"],"mappings":"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","file":"static/js/21.e78fbce0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport {\n  Button,\n  Icon,\n  Grid,\n  Radio,\n  RadioGroup,\n  FormControlLabel,\n  Checkbox\n} from \"@material-ui/core\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker\n} from \"@material-ui/pickers\";\nimport \"date-fns\";\nimport DateFnsUtils from \"@date-io/date-fns\";\n\nclass SimpleForm extends Component {\n  state = {\n    username: \"\",\n    firstName: \"\",\n    email: \"\",\n    date: new Date(),\n    creditCard: \"\",\n    mobile: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    gender: \"\",\n    agreement: \"\"\n  };\n\n  componentDidMount() {\n    // custom rule will have name 'isPasswordMatch'\n    ValidatorForm.addValidationRule(\"isPasswordMatch\", value => {\n      if (value !== this.state.password) {\n        return false;\n      }\n      return true;\n    });\n  }\n\n  componentWillUnmount() {\n    // remove rule when it is not needed\n    ValidatorForm.removeValidationRule(\"isPasswordMatch\");\n  }\n\n  handleSubmit = event => {\n    // console.log(\"submitted\");\n    // console.log(event);\n  };\n\n  handleChange = event => {\n    event.persist();\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleDateChange = date => {\n    // console.log(date);\n\n    this.setState({ date });\n  };\n\n  render() {\n    let {\n      username,\n      firstName,\n      creditCard,\n      mobile,\n      password,\n      confirmPassword,\n      gender,\n      date,\n      email\n    } = this.state;\n    return (\n      <div>\n        <ValidatorForm\n          ref=\"form\"\n          onSubmit={this.handleSubmit}\n          onError={errors => null}\n        >\n          <Grid container spacing={6}>\n            <Grid item lg={6} md={6} sm={12} xs={12}>\n              <TextValidator\n                className=\"mb-4 w-full\"\n                label=\"Username (Min length 4, Max length 9)\"\n                onChange={this.handleChange}\n                type=\"text\"\n                name=\"username\"\n                value={username}\n                validators={[\n                  \"required\",\n                  \"minStringLength: 4\",\n                  \"maxStringLength: 9\"\n                ]}\n                errorMessages={[\"this field is required\"]}\n              />\n              <TextValidator\n                className=\"mb-4 w-full\"\n                label=\"First Name\"\n                onChange={this.handleChange}\n                type=\"text\"\n                name=\"firstName\"\n                value={firstName}\n                validators={[\"required\"]}\n                errorMessages={[\"this field is required\"]}\n              />\n              <TextValidator\n                className=\"mb-4 w-full\"\n                label=\"Email\"\n                onChange={this.handleChange}\n                type=\"email\"\n                name=\"email\"\n                value={email}\n                validators={[\"required\", \"isEmail\"]}\n                errorMessages={[\"this field is required\", \"email is not valid\"]}\n              />\n\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDatePicker\n                  className=\"mb-4 w-full\"\n                  margin=\"none\"\n                  id=\"mui-pickers-date\"\n                  label=\"Date picker\"\n                  inputVariant=\"standard\"\n                  type=\"text\"\n                  autoOk={true}\n                  value={date}\n                  onChange={this.handleDateChange}\n                  KeyboardButtonProps={{\n                    \"aria-label\": \"change date\"\n                  }}\n                />\n              </MuiPickersUtilsProvider>\n              <TextValidator\n                className=\"mb-8 w-full\"\n                label=\"Credit Card\"\n                onChange={this.handleChange}\n                type=\"number\"\n                name=\"creditCard\"\n                value={creditCard}\n                validators={[\n                  \"required\",\n                  \"minStringLength:16\",\n                  \"maxStringLength: 16\"\n                ]}\n                errorMessages={[\"this field is required\"]}\n              />\n            </Grid>\n\n            <Grid item lg={6} md={6} sm={12} xs={12}>\n              <TextValidator\n                className=\"mb-4 w-full\"\n                label=\"Mobile Nubmer\"\n                onChange={this.handleChange}\n                type=\"text\"\n                name=\"mobile\"\n                value={mobile}\n                validators={[\"required\"]}\n                errorMessages={[\"this field is required\"]}\n              />\n              <TextValidator\n                className=\"mb-4 w-full\"\n                label=\"Password\"\n                onChange={this.handleChange}\n                name=\"password\"\n                type=\"password\"\n                value={password}\n                validators={[\"required\"]}\n                errorMessages={[\"this field is required\"]}\n              />\n              <TextValidator\n                className=\"mb-4 w-full\"\n                label=\"Confirm Password\"\n                onChange={this.handleChange}\n                name=\"confirmPassword\"\n                type=\"password\"\n                value={confirmPassword}\n                validators={[\"required\", \"isPasswordMatch\"]}\n                errorMessages={[\n                  \"this field is required\",\n                  \"password didn't match\"\n                ]}\n              />\n              <RadioGroup\n                className=\"mb-4\"\n                value={gender}\n                name=\"gender\"\n                onChange={this.handleChange}\n                row\n              >\n                <FormControlLabel\n                  value=\"Male\"\n                  control={<Radio color=\"secondary\" />}\n                  label=\"Male\"\n                  labelPlacement=\"end\"\n                />\n                <FormControlLabel\n                  value=\"Female\"\n                  control={<Radio color=\"secondary\" />}\n                  label=\"Female\"\n                  labelPlacement=\"end\"\n                />\n                <FormControlLabel\n                  value=\"Others\"\n                  control={<Radio color=\"secondary\" />}\n                  label=\"Others\"\n                  labelPlacement=\"end\"\n                />\n              </RadioGroup>\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"I have read and agree to the terms of service.\"\n              />\n            </Grid>\n          </Grid>\n          <Button color=\"primary\" variant=\"contained\" type=\"submit\">\n            <Icon>send</Icon>\n            <span className=\"pl-2 capitalize\">Submit</span>\n          </Button>\n        </ValidatorForm>\n      </div>\n    );\n  }\n}\n\nexport default SimpleForm;\n","import React, { Component } from \"react\";\nimport { Breadcrumb } from \"matx\";\nimport SimpleForm from \"../material-kit/forms/SimpleForm\";\nimport { Card } from \"@material-ui/core\";\n\nclass BasicForm extends Component {\n  render() {\n    return (\n      <div className=\"m-sm-30\">\n        <div  className=\"mb-sm-30\">\n          <Breadcrumb\n            routeSegments={[\n              { name: \"Forms\", path: \"/forms\" },\n              { name: \"Basic\" }\n            ]}\n          />\n        </div>\n        <Card className=\"px-6 pt-2 pb-4\"><SimpleForm /></Card>\n      </div>\n    );\n  }\n}\n\nexport default BasicForm;\n"],"sourceRoot":""}